### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Vout
  commentId: T:VEDriversLite.NeblioAPI.Vout
  id: Vout
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Vout.AdditionalProperties
  - VEDriversLite.NeblioAPI.Vout.Blockheight
  - VEDriversLite.NeblioAPI.Vout.N
  - VEDriversLite.NeblioAPI.Vout.ScriptPubKey
  - VEDriversLite.NeblioAPI.Vout.Tokens
  - VEDriversLite.NeblioAPI.Vout.Used
  - VEDriversLite.NeblioAPI.Vout.UsedBlockheight
  - VEDriversLite.NeblioAPI.Vout.UsedTxid
  - VEDriversLite.NeblioAPI.Vout.Value
  langs:
  - csharp
  - vb
  name: Vout
  nameWithType: Vout
  fullName: VEDriversLite.NeblioAPI.Vout
  type: Class
  source:
    id: Vout
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5757
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Vout
    content.vb: Public Class Vout
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Vout.Value
  commentId: P:VEDriversLite.NeblioAPI.Vout.Value
  id: Value
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Vout.Value
  fullName: VEDriversLite.NeblioAPI.Vout.Value
  type: Property
  source:
    id: Value
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5761
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Value of the output in NEBL satoshi
  example: []
  syntax:
    content: >-
      [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Value { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("value", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Value As Double?
  overload: VEDriversLite.NeblioAPI.Vout.Value*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.N
  commentId: P:VEDriversLite.NeblioAPI.Vout.N
  id: N
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: N
  nameWithType: Vout.N
  fullName: VEDriversLite.NeblioAPI.Vout.N
  type: Property
  source:
    id: N
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5765
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Output index
  example: []
  syntax:
    content: >-
      [JsonProperty("n", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? N { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("n", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property N As Double?
  overload: VEDriversLite.NeblioAPI.Vout.N*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: n
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.ScriptPubKey
  commentId: P:VEDriversLite.NeblioAPI.Vout.ScriptPubKey
  id: ScriptPubKey
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: ScriptPubKey
  nameWithType: Vout.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Vout.ScriptPubKey
  type: Property
  source:
    id: ScriptPubKey
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5768
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("scriptPubKey", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ScriptPubKey ScriptPubKey { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.ScriptPubKey
    content.vb: >-
      <JsonProperty("scriptPubKey", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ScriptPubKey As ScriptPubKey
  overload: VEDriversLite.NeblioAPI.Vout.ScriptPubKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scriptPubKey
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.Tokens
  commentId: P:VEDriversLite.NeblioAPI.Vout.Tokens
  id: Tokens
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: Vout.Tokens
  fullName: VEDriversLite.NeblioAPI.Vout.Tokens
  type: Property
  source:
    id: Tokens
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5771
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("tokens", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Tokens3> Tokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens3}
    content.vb: >-
      <JsonProperty("tokens", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Tokens As ICollection(Of Tokens3)
  overload: VEDriversLite.NeblioAPI.Vout.Tokens*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tokens
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.Used
  commentId: P:VEDriversLite.NeblioAPI.Vout.Used
  id: Used
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: Used
  nameWithType: Vout.Used
  fullName: VEDriversLite.NeblioAPI.Vout.Used
  type: Property
  source:
    id: Used
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5775
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Whether this output has now been used
  example: []
  syntax:
    content: >-
      [JsonProperty("used", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public bool? Used { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("used", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Used As Boolean?
  overload: VEDriversLite.NeblioAPI.Vout.Used*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: used
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.Blockheight
  commentId: P:VEDriversLite.NeblioAPI.Vout.Blockheight
  id: Blockheight
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: Blockheight
  nameWithType: Vout.Blockheight
  fullName: VEDriversLite.NeblioAPI.Vout.Blockheight
  type: Property
  source:
    id: Blockheight
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5779
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Blockheight of this transaction
  example: []
  syntax:
    content: >-
      [JsonProperty("blockheight", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Blockheight { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("blockheight", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blockheight As Double?
  overload: VEDriversLite.NeblioAPI.Vout.Blockheight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockheight
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.UsedBlockheight
  commentId: P:VEDriversLite.NeblioAPI.Vout.UsedBlockheight
  id: UsedBlockheight
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: UsedBlockheight
  nameWithType: Vout.UsedBlockheight
  fullName: VEDriversLite.NeblioAPI.Vout.UsedBlockheight
  type: Property
  source:
    id: UsedBlockheight
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5783
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Blockheight this output was used in
  example: []
  syntax:
    content: >-
      [JsonProperty("usedBlockheight")]

      public double? UsedBlockheight { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("usedBlockheight")>

      Public Property UsedBlockheight As Double?
  overload: VEDriversLite.NeblioAPI.Vout.UsedBlockheight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: usedBlockheight
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.UsedTxid
  commentId: P:VEDriversLite.NeblioAPI.Vout.UsedTxid
  id: UsedTxid
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: UsedTxid
  nameWithType: Vout.UsedTxid
  fullName: VEDriversLite.NeblioAPI.Vout.UsedTxid
  type: Property
  source:
    id: UsedTxid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5787
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: TXID this output was used in
  example: []
  syntax:
    content: >-
      [JsonProperty("usedTxid")]

      public string UsedTxid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("usedTxid")>

      Public Property UsedTxid As String
  overload: VEDriversLite.NeblioAPI.Vout.UsedTxid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: usedTxid
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vout.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Vout.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Vout
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Vout.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Vout.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5792
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Vout.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Vout.Value*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.Value
  name: Value
  nameWithType: Vout.Value
  fullName: VEDriversLite.NeblioAPI.Vout.Value
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Vout.N*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.N
  name: N
  nameWithType: Vout.N
  fullName: VEDriversLite.NeblioAPI.Vout.N
- uid: VEDriversLite.NeblioAPI.Vout.ScriptPubKey*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.ScriptPubKey
  name: ScriptPubKey
  nameWithType: Vout.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Vout.ScriptPubKey
- uid: VEDriversLite.NeblioAPI.ScriptPubKey
  commentId: T:VEDriversLite.NeblioAPI.ScriptPubKey
  parent: VEDriversLite.NeblioAPI
  name: ScriptPubKey
  nameWithType: ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.ScriptPubKey
- uid: VEDriversLite.NeblioAPI.Vout.Tokens*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.Tokens
  name: Tokens
  nameWithType: Vout.Tokens
  fullName: VEDriversLite.NeblioAPI.Vout.Tokens
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens3}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens3}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Tokens3>
  nameWithType: ICollection<Tokens3>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Tokens3>
  nameWithType.vb: ICollection(Of Tokens3)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Tokens3)
  name.vb: ICollection(Of Tokens3)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Tokens3
    name: Tokens3
    nameWithType: Tokens3
    fullName: VEDriversLite.NeblioAPI.Tokens3
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Tokens3
    name: Tokens3
    nameWithType: Tokens3
    fullName: VEDriversLite.NeblioAPI.Tokens3
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.Vout.Used*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.Used
  name: Used
  nameWithType: Vout.Used
  fullName: VEDriversLite.NeblioAPI.Vout.Used
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Vout.Blockheight*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.Blockheight
  name: Blockheight
  nameWithType: Vout.Blockheight
  fullName: VEDriversLite.NeblioAPI.Vout.Blockheight
- uid: VEDriversLite.NeblioAPI.Vout.UsedBlockheight*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.UsedBlockheight
  name: UsedBlockheight
  nameWithType: Vout.UsedBlockheight
  fullName: VEDriversLite.NeblioAPI.Vout.UsedBlockheight
- uid: VEDriversLite.NeblioAPI.Vout.UsedTxid*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.UsedTxid
  name: UsedTxid
  nameWithType: Vout.UsedTxid
  fullName: VEDriversLite.NeblioAPI.Vout.UsedTxid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Vout.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Vout.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Vout.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Vout.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
