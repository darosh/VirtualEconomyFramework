### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.GetBlockResponse
  commentId: T:VEDriversLite.NeblioAPI.GetBlockResponse
  id: GetBlockResponse
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
  - VEDriversLite.NeblioAPI.GetBlockResponse.Bits
  - VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
  - VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
  - VEDriversLite.NeblioAPI.GetBlockResponse.Hash
  - VEDriversLite.NeblioAPI.GetBlockResponse.Height
  - VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
  - VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
  - VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
  - VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
  - VEDriversLite.NeblioAPI.GetBlockResponse.Reward
  - VEDriversLite.NeblioAPI.GetBlockResponse.Size
  - VEDriversLite.NeblioAPI.GetBlockResponse.Time
  - VEDriversLite.NeblioAPI.GetBlockResponse.Tx
  - VEDriversLite.NeblioAPI.GetBlockResponse.Version
  langs:
  - csharp
  - vb
  name: GetBlockResponse
  nameWithType: GetBlockResponse
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse
  type: Class
  source:
    id: GetBlockResponse
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5199
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class GetBlockResponse
    content.vb: Public Class GetBlockResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Hash
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Hash
  id: Hash
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Hash
  nameWithType: GetBlockResponse.Hash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Hash
  type: Property
  source:
    id: Hash
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5203
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block hash
  example: []
  syntax:
    content: >-
      [JsonProperty("hash", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Hash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("hash", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Hash As String
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Hash*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hash
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
  id: Confirmations
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Confirmations
  nameWithType: GetBlockResponse.Confirmations
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
  type: Property
  source:
    id: Confirmations
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5207
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of confirmations block has
  example: []
  syntax:
    content: >-
      [JsonProperty("confirmations", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Confirmations { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("confirmations", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Confirmations As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: confirmations
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Size
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Size
  id: Size
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Size
  nameWithType: GetBlockResponse.Size
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Size
  type: Property
  source:
    id: Size
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5211
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block size in bytes
  example: []
  syntax:
    content: >-
      [JsonProperty("size", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Size { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("size", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Size As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Size*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: size
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Height
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Height
  id: Height
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Height
  nameWithType: GetBlockResponse.Height
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Height
  type: Property
  source:
    id: Height
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5215
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block height
  example: []
  syntax:
    content: >-
      [JsonProperty("height", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Height { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("height", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Height As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Height*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: height
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Version
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Version
  id: Version
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: GetBlockResponse.Version
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Version
  type: Property
  source:
    id: Version
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5219
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block version
  example: []
  syntax:
    content: >-
      [JsonProperty("version", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Version { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("version", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Version As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Version*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
  id: Merkleroot
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Merkleroot
  nameWithType: GetBlockResponse.Merkleroot
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
  type: Property
  source:
    id: Merkleroot
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5223
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Merkleroot of block
  example: []
  syntax:
    content: >-
      [JsonProperty("merkleroot", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Merkleroot { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("merkleroot", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Merkleroot As String
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: merkleroot
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Tx
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Tx
  id: Tx
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Tx
  nameWithType: GetBlockResponse.Tx
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Tx
  type: Property
  source:
    id: Tx
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5227
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Array of tx ids in the block
  example: []
  syntax:
    content: >-
      [JsonProperty("tx", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<string> Tx { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: >-
      <JsonProperty("tx", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Tx As ICollection(Of String)
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Tx*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tx
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Time
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Time
  id: Time
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: GetBlockResponse.Time
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Time
  type: Property
  source:
    id: Time
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5231
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block time relative to epoch
  example: []
  syntax:
    content: >-
      [JsonProperty("time", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Time { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("time", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Time As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Time*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
  id: Nonce
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Nonce
  nameWithType: GetBlockResponse.Nonce
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
  type: Property
  source:
    id: Nonce
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5235
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block nonce
  example: []
  syntax:
    content: >-
      [JsonProperty("nonce", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Nonce { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("nonce", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Nonce As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Nonce*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nonce
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Bits
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Bits
  id: Bits
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Bits
  nameWithType: GetBlockResponse.Bits
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Bits
  type: Property
  source:
    id: Bits
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5239
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block bits
  example: []
  syntax:
    content: >-
      [JsonProperty("bits", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Bits { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("bits", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Bits As String
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Bits*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: bits
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
  id: Difficulty
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Difficulty
  nameWithType: GetBlockResponse.Difficulty
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
  type: Property
  source:
    id: Difficulty
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5243
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block difficulty
  example: []
  syntax:
    content: >-
      [JsonProperty("difficulty", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Difficulty { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("difficulty", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Difficulty As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: difficulty
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
  id: Previousblockhash
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Previousblockhash
  nameWithType: GetBlockResponse.Previousblockhash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
  type: Property
  source:
    id: Previousblockhash
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5247
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Hash of the previous block on the chain
  example: []
  syntax:
    content: >-
      [JsonProperty("previousblockhash", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Previousblockhash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("previousblockhash", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Previousblockhash As String
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: previousblockhash
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
  id: Nextblockhash
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Nextblockhash
  nameWithType: GetBlockResponse.Nextblockhash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
  type: Property
  source:
    id: Nextblockhash
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5251
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Hash of the next block on the chain
  example: []
  syntax:
    content: >-
      [JsonProperty("nextblockhash", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Nextblockhash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("nextblockhash", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Nextblockhash As String
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: nextblockhash
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Reward
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.Reward
  id: Reward
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: Reward
  nameWithType: GetBlockResponse.Reward
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Reward
  type: Property
  source:
    id: Reward
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5255
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of NEBL awarded in this block
  example: []
  syntax:
    content: >-
      [JsonProperty("reward", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Reward { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("reward", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Reward As Double?
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.Reward*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reward
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.GetBlockResponse
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: GetBlockResponse.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5260
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Hash*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Hash
  name: Hash
  nameWithType: GetBlockResponse.Hash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Hash
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
  name: Confirmations
  nameWithType: GetBlockResponse.Confirmations
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Confirmations
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Size*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Size
  name: Size
  nameWithType: GetBlockResponse.Size
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Size
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Height*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Height
  name: Height
  nameWithType: GetBlockResponse.Height
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Height
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Version*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Version
  name: Version
  nameWithType: GetBlockResponse.Version
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Version
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
  name: Merkleroot
  nameWithType: GetBlockResponse.Merkleroot
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Merkleroot
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Tx*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Tx
  name: Tx
  nameWithType: GetBlockResponse.Tx
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Tx
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Time*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Time
  name: Time
  nameWithType: GetBlockResponse.Time
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Time
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Nonce*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
  name: Nonce
  nameWithType: GetBlockResponse.Nonce
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Nonce
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Bits*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Bits
  name: Bits
  nameWithType: GetBlockResponse.Bits
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Bits
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
  name: Difficulty
  nameWithType: GetBlockResponse.Difficulty
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Difficulty
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
  name: Previousblockhash
  nameWithType: GetBlockResponse.Previousblockhash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Previousblockhash
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
  name: Nextblockhash
  nameWithType: GetBlockResponse.Nextblockhash
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Nextblockhash
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.Reward*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.Reward
  name: Reward
  nameWithType: GetBlockResponse.Reward
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.Reward
- uid: VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
  name: AdditionalProperties
  nameWithType: GetBlockResponse.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.GetBlockResponse.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
