### YamlMime:ManagedReference
items:
- uid: VEDriversLite.Builder.TransactionInputSummary
  commentId: T:VEDriversLite.Builder.TransactionInputSummary
  id: TransactionInputSummary
  parent: VEDriversLite.Builder
  children:
  - VEDriversLite.Builder.TransactionInputSummary.Tokens
  - VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
  langs:
  - csharp
  - vb
  name: TransactionInputSummary
  nameWithType: TransactionInputSummary
  fullName: VEDriversLite.Builder.TransactionInputSummary
  type: Class
  source:
    id: TransactionInputSummary
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\TransactionInputSummary.cs
    startLine: 7
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public class TransactionInputSummary
    content.vb: Public Class TransactionInputSummary
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
  commentId: P:VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
  id: TotalNeblioAmount
  parent: VEDriversLite.Builder.TransactionInputSummary
  langs:
  - csharp
  - vb
  name: TotalNeblioAmount
  nameWithType: TransactionInputSummary.TotalNeblioAmount
  fullName: VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
  type: Property
  source:
    id: TotalNeblioAmount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\TransactionInputSummary.cs
    startLine: 9
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public double TotalNeblioAmount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property TotalNeblioAmount As Double
  overload: VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.Builder.TransactionInputSummary.Tokens
  commentId: P:VEDriversLite.Builder.TransactionInputSummary.Tokens
  id: Tokens
  parent: VEDriversLite.Builder.TransactionInputSummary
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: TransactionInputSummary.Tokens
  fullName: VEDriversLite.Builder.TransactionInputSummary.Tokens
  type: Property
  source:
    id: Tokens
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\TransactionInputSummary.cs
    startLine: 10
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public Dictionary<GetTokenMetadataResponse, int> Tokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{VEDriversLite.NeblioAPI.GetTokenMetadataResponse,System.Int32}
    content.vb: Public Property Tokens As Dictionary(Of GetTokenMetadataResponse, Integer)
  overload: VEDriversLite.Builder.TransactionInputSummary.Tokens*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.Builder
  commentId: N:VEDriversLite.Builder
  name: VEDriversLite.Builder
  nameWithType: VEDriversLite.Builder
  fullName: VEDriversLite.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount*
  commentId: Overload:VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
  name: TotalNeblioAmount
  nameWithType: TransactionInputSummary.TotalNeblioAmount
  fullName: VEDriversLite.Builder.TransactionInputSummary.TotalNeblioAmount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VEDriversLite.Builder.TransactionInputSummary.Tokens*
  commentId: Overload:VEDriversLite.Builder.TransactionInputSummary.Tokens
  name: Tokens
  nameWithType: TransactionInputSummary.Tokens
  fullName: VEDriversLite.Builder.TransactionInputSummary.Tokens
- uid: System.Collections.Generic.Dictionary{VEDriversLite.NeblioAPI.GetTokenMetadataResponse,System.Int32}
  commentId: T:System.Collections.Generic.Dictionary{VEDriversLite.NeblioAPI.GetTokenMetadataResponse,System.Int32}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<GetTokenMetadataResponse, Int32>
  nameWithType: Dictionary<GetTokenMetadataResponse, Int32>
  fullName: System.Collections.Generic.Dictionary<VEDriversLite.NeblioAPI.GetTokenMetadataResponse, System.Int32>
  nameWithType.vb: Dictionary(Of GetTokenMetadataResponse, Int32)
  fullName.vb: System.Collections.Generic.Dictionary(Of VEDriversLite.NeblioAPI.GetTokenMetadataResponse, System.Int32)
  name.vb: Dictionary(Of GetTokenMetadataResponse, Int32)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.GetTokenMetadataResponse
    name: GetTokenMetadataResponse
    nameWithType: GetTokenMetadataResponse
    fullName: VEDriversLite.NeblioAPI.GetTokenMetadataResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.GetTokenMetadataResponse
    name: GetTokenMetadataResponse
    nameWithType: GetTokenMetadataResponse
    fullName: VEDriversLite.NeblioAPI.GetTokenMetadataResponse
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
