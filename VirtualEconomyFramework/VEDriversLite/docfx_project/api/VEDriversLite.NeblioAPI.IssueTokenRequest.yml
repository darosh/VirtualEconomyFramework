### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest
  commentId: T:VEDriversLite.NeblioAPI.IssueTokenRequest
  id: IssueTokenRequest
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
  - VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
  - VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
  langs:
  - csharp
  - vb
  name: IssueTokenRequest
  nameWithType: IssueTokenRequest
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest
  type: Class
  source:
    id: IssueTokenRequest
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4967
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class IssueTokenRequest
    content.vb: Public Class IssueTokenRequest
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
  id: IssueAddress
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: IssueAddress
  nameWithType: IssueTokenRequest.IssueAddress
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
  type: Property
  source:
    id: IssueAddress
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4971
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Address issuing the token
  example: []
  syntax:
    content: >-
      [JsonProperty("issueAddress", Required = Required.Always)]

      public string IssueAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("issueAddress", Required:=Required.Always)>

      Public Property IssueAddress As String
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: issueAddress
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
  id: Amount
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: IssueTokenRequest.Amount
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
  type: Property
  source:
    id: Amount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4975
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of tokens to issue
  example: []
  syntax:
    content: >-
      [JsonProperty("amount", Required = Required.Always)]

      public double Amount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("amount", Required:=Required.Always)>

      Public Property Amount As Double
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Amount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: amount
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
  id: Divisibility
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Divisibility
  nameWithType: IssueTokenRequest.Divisibility
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
  type: Property
  source:
    id: Divisibility
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4979
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of decimal places the token should be divisble by (0-7)
  example: []
  syntax:
    content: >-
      [JsonProperty("divisibility", Required = Required.Always)]

      public double Divisibility { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("divisibility", Required:=Required.Always)>

      Public Property Divisibility As Double
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: divisibility
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
  id: Fee
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Fee
  nameWithType: IssueTokenRequest.Fee
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
  type: Property
  source:
    id: Fee
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4983
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Fee in satoshi to include in the issuance transaction min 1000000000 (10 NEBL)
  example: []
  syntax:
    content: >-
      [JsonProperty("fee", Required = Required.Always)]

      public double Fee { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: >-
      <JsonProperty("fee", Required:=Required.Always)>

      Public Property Fee As Double
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Fee*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fee
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
  id: Reissuable
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Reissuable
  nameWithType: IssueTokenRequest.Reissuable
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
  type: Property
  source:
    id: Reissuable
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4987
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: whether the token should be reissuable
  example: []
  syntax:
    content: >-
      [JsonProperty("reissuable", Required = Required.Always)]

      public bool Reissuable { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <JsonProperty("reissuable", Required:=Required.Always)>

      Public Property Reissuable As Boolean
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: reissuable
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
  id: Flags
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Flags
  nameWithType: IssueTokenRequest.Flags
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
  type: Property
  source:
    id: Flags
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4991
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Object representing flags that potentialy modify this transaction
  example: []
  syntax:
    content: >-
      [JsonProperty("flags", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public Flags Flags { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.Flags
    content.vb: >-
      <JsonProperty("flags", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Flags As Flags
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Flags*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: flags
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
  id: Transfer
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Transfer
  nameWithType: IssueTokenRequest.Transfer
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
  type: Property
  source:
    id: Transfer
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4994
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("transfer", Required = Required.Always)]

      public ICollection<Transfer> Transfer { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Transfer}
    content.vb: >-
      <JsonProperty("transfer", Required:=Required.Always)>

      Public Property Transfer As ICollection(Of Transfer)
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: transfer
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 2
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
  id: Metadata
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: IssueTokenRequest.Metadata
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
  type: Property
  source:
    id: Metadata
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4998
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Object representing all metadata at token issuance
  example: []
  syntax:
    content: >-
      [JsonProperty("metadata", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public Metadata Metadata { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.Metadata
    content.vb: >-
      <JsonProperty("metadata", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Metadata As Metadata
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: metadata
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.IssueTokenRequest
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: IssueTokenRequest.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5003
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
  name: IssueAddress
  nameWithType: IssueTokenRequest.IssueAddress
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.IssueAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Amount*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
  name: Amount
  nameWithType: IssueTokenRequest.Amount
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Amount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
  name: Divisibility
  nameWithType: IssueTokenRequest.Divisibility
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Divisibility
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Fee*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
  name: Fee
  nameWithType: IssueTokenRequest.Fee
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Fee
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
  name: Reissuable
  nameWithType: IssueTokenRequest.Reissuable
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Reissuable
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Flags*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
  name: Flags
  nameWithType: IssueTokenRequest.Flags
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Flags
- uid: VEDriversLite.NeblioAPI.Flags
  commentId: T:VEDriversLite.NeblioAPI.Flags
  parent: VEDriversLite.NeblioAPI
  name: Flags
  nameWithType: Flags
  fullName: VEDriversLite.NeblioAPI.Flags
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
  name: Transfer
  nameWithType: IssueTokenRequest.Transfer
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Transfer
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Transfer}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Transfer}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Transfer>
  nameWithType: ICollection<Transfer>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Transfer>
  nameWithType.vb: ICollection(Of Transfer)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Transfer)
  name.vb: ICollection(Of Transfer)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Transfer
    name: Transfer
    nameWithType: Transfer
    fullName: VEDriversLite.NeblioAPI.Transfer
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Transfer
    name: Transfer
    nameWithType: Transfer
    fullName: VEDriversLite.NeblioAPI.Transfer
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
  name: Metadata
  nameWithType: IssueTokenRequest.Metadata
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.Metadata
- uid: VEDriversLite.NeblioAPI.Metadata
  commentId: T:VEDriversLite.NeblioAPI.Metadata
  parent: VEDriversLite.NeblioAPI
  name: Metadata
  nameWithType: Metadata
  fullName: VEDriversLite.NeblioAPI.Metadata
- uid: VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
  name: AdditionalProperties
  nameWithType: IssueTokenRequest.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.IssueTokenRequest.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
