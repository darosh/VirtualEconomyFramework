### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Anonymous
  commentId: T:VEDriversLite.NeblioAPI.Anonymous
  id: Anonymous
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
  - VEDriversLite.NeblioAPI.Anonymous.Address
  - VEDriversLite.NeblioAPI.Anonymous.Amount
  - VEDriversLite.NeblioAPI.Anonymous.Confirmations
  - VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
  - VEDriversLite.NeblioAPI.Anonymous.Ts
  - VEDriversLite.NeblioAPI.Anonymous.Txid
  - VEDriversLite.NeblioAPI.Anonymous.Vout
  langs:
  - csharp
  - vb
  name: Anonymous
  nameWithType: Anonymous
  fullName: VEDriversLite.NeblioAPI.Anonymous
  type: Class
  source:
    id: Anonymous
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5620
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Anonymous
    content.vb: Public Class Anonymous
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Anonymous.Address
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Address
  id: Address
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Address
  nameWithType: Anonymous.Address
  fullName: VEDriversLite.NeblioAPI.Anonymous.Address
  type: Property
  source:
    id: Address
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5624
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Address
  example: []
  syntax:
    content: >-
      [JsonProperty("address", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Address { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("address", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Address As String
  overload: VEDriversLite.NeblioAPI.Anonymous.Address*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: address
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.Txid
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Txid
  id: Txid
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Txid
  nameWithType: Anonymous.Txid
  fullName: VEDriversLite.NeblioAPI.Anonymous.Txid
  type: Property
  source:
    id: Txid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5628
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Transaction ID
  example: []
  syntax:
    content: >-
      [JsonProperty("txid", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Txid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("txid", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Txid As String
  overload: VEDriversLite.NeblioAPI.Anonymous.Txid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: txid
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.Vout
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Vout
  id: Vout
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Vout
  nameWithType: Anonymous.Vout
  fullName: VEDriversLite.NeblioAPI.Anonymous.Vout
  type: Property
  source:
    id: Vout
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5632
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: vout
  example: []
  syntax:
    content: >-
      [JsonProperty("vout", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Vout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("vout", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Vout As Double?
  overload: VEDriversLite.NeblioAPI.Anonymous.Vout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vout
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.Ts
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Ts
  id: Ts
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Ts
  nameWithType: Anonymous.Ts
  fullName: VEDriversLite.NeblioAPI.Anonymous.Ts
  type: Property
  source:
    id: Ts
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5636
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Timestamp
  example: []
  syntax:
    content: >-
      [JsonProperty("ts", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Ts { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("ts", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Ts As Double?
  overload: VEDriversLite.NeblioAPI.Anonymous.Ts*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: ts
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
  id: ScriptPubKey
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: ScriptPubKey
  nameWithType: Anonymous.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
  type: Property
  source:
    id: ScriptPubKey
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5640
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: scriptPubKey
  example: []
  syntax:
    content: >-
      [JsonProperty("scriptPubKey", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string ScriptPubKey { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("scriptPubKey", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ScriptPubKey As String
  overload: VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scriptPubKey
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.Amount
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Amount
  id: Amount
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: Anonymous.Amount
  fullName: VEDriversLite.NeblioAPI.Anonymous.Amount
  type: Property
  source:
    id: Amount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5644
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: NEBL amount
  example: []
  syntax:
    content: >-
      [JsonProperty("amount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Amount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("amount", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Amount As Double?
  overload: VEDriversLite.NeblioAPI.Anonymous.Amount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: amount
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.Confirmations
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.Confirmations
  id: Confirmations
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: Confirmations
  nameWithType: Anonymous.Confirmations
  fullName: VEDriversLite.NeblioAPI.Anonymous.Confirmations
  type: Property
  source:
    id: Confirmations
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5648
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of confirmations
  example: []
  syntax:
    content: >-
      [JsonProperty("confirmations", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Confirmations { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("confirmations", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Confirmations As Double?
  overload: VEDriversLite.NeblioAPI.Anonymous.Confirmations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: confirmations
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Anonymous
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Anonymous.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5653
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Anonymous.Address*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Address
  name: Address
  nameWithType: Anonymous.Address
  fullName: VEDriversLite.NeblioAPI.Anonymous.Address
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Anonymous.Txid*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Txid
  name: Txid
  nameWithType: Anonymous.Txid
  fullName: VEDriversLite.NeblioAPI.Anonymous.Txid
- uid: VEDriversLite.NeblioAPI.Anonymous.Vout*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Vout
  name: Vout
  nameWithType: Anonymous.Vout
  fullName: VEDriversLite.NeblioAPI.Anonymous.Vout
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Anonymous.Ts*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Ts
  name: Ts
  nameWithType: Anonymous.Ts
  fullName: VEDriversLite.NeblioAPI.Anonymous.Ts
- uid: VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
  name: ScriptPubKey
  nameWithType: Anonymous.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Anonymous.ScriptPubKey
- uid: VEDriversLite.NeblioAPI.Anonymous.Amount*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Amount
  name: Amount
  nameWithType: Anonymous.Amount
  fullName: VEDriversLite.NeblioAPI.Anonymous.Amount
- uid: VEDriversLite.NeblioAPI.Anonymous.Confirmations*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.Confirmations
  name: Confirmations
  nameWithType: Anonymous.Confirmations
  fullName: VEDriversLite.NeblioAPI.Anonymous.Confirmations
- uid: VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Anonymous.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Anonymous.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
