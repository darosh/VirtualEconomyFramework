### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  commentId: T:VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  id: GetTransactionInfoResponse
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
  - VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
  langs:
  - csharp
  - vb
  name: GetTransactionInfoResponse
  nameWithType: GetTransactionInfoResponse
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  type: Class
  source:
    id: GetTransactionInfoResponse
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4779
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class GetTransactionInfoResponse
    content.vb: Public Class GetTransactionInfoResponse
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
  id: Hex
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Hex
  nameWithType: GetTransactionInfoResponse.Hex
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
  type: Property
  source:
    id: Hex
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4783
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Transaction in raw hex
  example: []
  syntax:
    content: >-
      [JsonProperty("hex", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Hex { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("hex", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Hex As String
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: hex
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
  id: Txid
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Txid
  nameWithType: GetTransactionInfoResponse.Txid
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
  type: Property
  source:
    id: Txid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4787
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: TXID of transaction
  example: []
  syntax:
    content: >-
      [JsonProperty("txid", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Txid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("txid", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Txid As String
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: txid
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
  id: Version
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Version
  nameWithType: GetTransactionInfoResponse.Version
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
  type: Property
  source:
    id: Version
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4791
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Transaction version
  example: []
  syntax:
    content: >-
      [JsonProperty("version", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Version { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("version", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Version As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: version
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
  id: Locktime
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Locktime
  nameWithType: GetTransactionInfoResponse.Locktime
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
  type: Property
  source:
    id: Locktime
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4795
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Transaction locktime
  example: []
  syntax:
    content: >-
      [JsonProperty("locktime", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Locktime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("locktime", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Locktime As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: locktime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
  id: Vin
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Vin
  nameWithType: GetTransactionInfoResponse.Vin
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
  type: Property
  source:
    id: Vin
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4799
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Array of transaction inputs
  example: []
  syntax:
    content: >-
      [JsonProperty("vin", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Vin> Vin { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vin}
    content.vb: >-
      <JsonProperty("vin", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Vin As ICollection(Of Vin)
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vin
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
  id: Vout
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Vout
  nameWithType: GetTransactionInfoResponse.Vout
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
  type: Property
  source:
    id: Vout
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4803
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Array of transaction outputs
  example: []
  syntax:
    content: >-
      [JsonProperty("vout", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Vout> Vout { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vout}
    content.vb: >-
      <JsonProperty("vout", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Vout As ICollection(Of Vout)
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vout
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
  id: Blocktime
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Blocktime
  nameWithType: GetTransactionInfoResponse.Blocktime
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
  type: Property
  source:
    id: Blocktime
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4807
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block time of this transaction
  example: []
  syntax:
    content: >-
      [JsonProperty("blocktime", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Blocktime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("blocktime", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blocktime As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blocktime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
  id: Blockheight
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Blockheight
  nameWithType: GetTransactionInfoResponse.Blockheight
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
  type: Property
  source:
    id: Blockheight
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4811
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Block height of this transaction
  example: []
  syntax:
    content: >-
      [JsonProperty("blockheight", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Blockheight { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("blockheight", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blockheight As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockheight
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
  id: Totalsent
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Totalsent
  nameWithType: GetTransactionInfoResponse.Totalsent
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
  type: Property
  source:
    id: Totalsent
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4815
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Total NEBL sent in this transaction in satoshis
  example: []
  syntax:
    content: >-
      [JsonProperty("totalsent", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Totalsent { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("totalsent", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Totalsent As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: totalsent
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
  id: Fee
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Fee
  nameWithType: GetTransactionInfoResponse.Fee
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
  type: Property
  source:
    id: Fee
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4819
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Total NEBL used as fee for this transcation in satoshis
  example: []
  syntax:
    content: >-
      [JsonProperty("fee", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Fee { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("fee", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Fee As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: fee
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
  id: Blockhash
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Blockhash
  nameWithType: GetTransactionInfoResponse.Blockhash
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
  type: Property
  source:
    id: Blockhash
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4823
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Hash of the block this transaction is in
  example: []
  syntax:
    content: >-
      [JsonProperty("blockhash", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Blockhash { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("blockhash", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blockhash As String
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockhash
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
  id: Time
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Time
  nameWithType: GetTransactionInfoResponse.Time
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
  type: Property
  source:
    id: Time
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4827
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Transaction time
  example: []
  syntax:
    content: >-
      [JsonProperty("time", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Time { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("time", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Time As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: time
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
  id: Confirmations
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: Confirmations
  nameWithType: GetTransactionInfoResponse.Confirmations
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
  type: Property
  source:
    id: Confirmations
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4831
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of transaction confirmations
  example: []
  syntax:
    content: >-
      [JsonProperty("confirmations", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Confirmations { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("confirmations", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Confirmations As Double?
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: confirmations
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.GetTransactionInfoResponse
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: GetTransactionInfoResponse.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 4836
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
  name: Hex
  nameWithType: GetTransactionInfoResponse.Hex
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Hex
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
  name: Txid
  nameWithType: GetTransactionInfoResponse.Txid
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Txid
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
  name: Version
  nameWithType: GetTransactionInfoResponse.Version
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Version
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
  name: Locktime
  nameWithType: GetTransactionInfoResponse.Locktime
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Locktime
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
  name: Vin
  nameWithType: GetTransactionInfoResponse.Vin
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vin
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vin}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vin}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Vin>
  nameWithType: ICollection<Vin>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Vin>
  nameWithType.vb: ICollection(Of Vin)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Vin)
  name.vb: ICollection(Of Vin)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Vin
    name: Vin
    nameWithType: Vin
    fullName: VEDriversLite.NeblioAPI.Vin
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Vin
    name: Vin
    nameWithType: Vin
    fullName: VEDriversLite.NeblioAPI.Vin
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
  name: Vout
  nameWithType: GetTransactionInfoResponse.Vout
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Vout
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vout}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Vout}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Vout>
  nameWithType: ICollection<Vout>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Vout>
  nameWithType.vb: ICollection(Of Vout)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Vout)
  name.vb: ICollection(Of Vout)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Vout
    name: Vout
    nameWithType: Vout
    fullName: VEDriversLite.NeblioAPI.Vout
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Vout
    name: Vout
    nameWithType: Vout
    fullName: VEDriversLite.NeblioAPI.Vout
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
  name: Blocktime
  nameWithType: GetTransactionInfoResponse.Blocktime
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blocktime
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
  name: Blockheight
  nameWithType: GetTransactionInfoResponse.Blockheight
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockheight
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
  name: Totalsent
  nameWithType: GetTransactionInfoResponse.Totalsent
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Totalsent
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
  name: Fee
  nameWithType: GetTransactionInfoResponse.Fee
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Fee
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
  name: Blockhash
  nameWithType: GetTransactionInfoResponse.Blockhash
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Blockhash
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
  name: Time
  nameWithType: GetTransactionInfoResponse.Time
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Time
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
  name: Confirmations
  nameWithType: GetTransactionInfoResponse.Confirmations
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.Confirmations
- uid: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
  name: AdditionalProperties
  nameWithType: GetTransactionInfoResponse.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.GetTransactionInfoResponse.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
