### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Tokens3
  commentId: T:VEDriversLite.NeblioAPI.Tokens3
  id: Tokens3
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
  - VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
  - VEDriversLite.NeblioAPI.Tokens3.Amount
  - VEDriversLite.NeblioAPI.Tokens3.Divisibility
  - VEDriversLite.NeblioAPI.Tokens3.IssueTxid
  - VEDriversLite.NeblioAPI.Tokens3.LockStatus
  - VEDriversLite.NeblioAPI.Tokens3.TokenId
  langs:
  - csharp
  - vb
  name: Tokens3
  nameWithType: Tokens3
  fullName: VEDriversLite.NeblioAPI.Tokens3
  type: Class
  source:
    id: Tokens3
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6342
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Tokens3
    content.vb: Public Class Tokens3
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Tokens3.TokenId
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.TokenId
  id: TokenId
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: TokenId
  nameWithType: Tokens3.TokenId
  fullName: VEDriversLite.NeblioAPI.Tokens3.TokenId
  type: Property
  source:
    id: TokenId
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6346
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: ID of the token
  example: []
  syntax:
    content: >-
      [JsonProperty("tokenId", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string TokenId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("tokenId", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property TokenId As String
  overload: VEDriversLite.NeblioAPI.Tokens3.TokenId*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tokenId
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.Amount
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.Amount
  id: Amount
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: Tokens3.Amount
  fullName: VEDriversLite.NeblioAPI.Tokens3.Amount
  type: Property
  source:
    id: Amount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6350
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Number of tokens
  example: []
  syntax:
    content: >-
      [JsonProperty("amount", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Amount { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("amount", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Amount As Double?
  overload: VEDriversLite.NeblioAPI.Tokens3.Amount*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: amount
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.IssueTxid
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.IssueTxid
  id: IssueTxid
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: IssueTxid
  nameWithType: Tokens3.IssueTxid
  fullName: VEDriversLite.NeblioAPI.Tokens3.IssueTxid
  type: Property
  source:
    id: IssueTxid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6354
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: TXID the token was issued in
  example: []
  syntax:
    content: >-
      [JsonProperty("issueTxid", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string IssueTxid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("issueTxid", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property IssueTxid As String
  overload: VEDriversLite.NeblioAPI.Tokens3.IssueTxid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: issueTxid
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.Divisibility
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.Divisibility
  id: Divisibility
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: Divisibility
  nameWithType: Tokens3.Divisibility
  fullName: VEDriversLite.NeblioAPI.Tokens3.Divisibility
  type: Property
  source:
    id: Divisibility
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6358
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Decimal places the token is divisible to
  example: []
  syntax:
    content: >-
      [JsonProperty("divisibility", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Divisibility { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("divisibility", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Divisibility As Double?
  overload: VEDriversLite.NeblioAPI.Tokens3.Divisibility*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: divisibility
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.LockStatus
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.LockStatus
  id: LockStatus
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: LockStatus
  nameWithType: Tokens3.LockStatus
  fullName: VEDriversLite.NeblioAPI.Tokens3.LockStatus
  type: Property
  source:
    id: LockStatus
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6362
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Whether issuance of more tokens is locked
  example: []
  syntax:
    content: >-
      [JsonProperty("lockStatus", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public bool? LockStatus { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("lockStatus", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property LockStatus As Boolean?
  overload: VEDriversLite.NeblioAPI.Tokens3.LockStatus*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: lockStatus
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
  id: AggregationPolicy
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: AggregationPolicy
  nameWithType: Tokens3.AggregationPolicy
  fullName: VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
  type: Property
  source:
    id: AggregationPolicy
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6366
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Whether the tokens are aggregatable
  example: []
  syntax:
    content: >-
      [JsonProperty("aggregationPolicy", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string AggregationPolicy { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("aggregationPolicy", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property AggregationPolicy As String
  overload: VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: aggregationPolicy
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Tokens3
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Tokens3.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6371
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Tokens3.TokenId*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.TokenId
  name: TokenId
  nameWithType: Tokens3.TokenId
  fullName: VEDriversLite.NeblioAPI.Tokens3.TokenId
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Tokens3.Amount*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.Amount
  name: Amount
  nameWithType: Tokens3.Amount
  fullName: VEDriversLite.NeblioAPI.Tokens3.Amount
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Tokens3.IssueTxid*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.IssueTxid
  name: IssueTxid
  nameWithType: Tokens3.IssueTxid
  fullName: VEDriversLite.NeblioAPI.Tokens3.IssueTxid
- uid: VEDriversLite.NeblioAPI.Tokens3.Divisibility*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.Divisibility
  name: Divisibility
  nameWithType: Tokens3.Divisibility
  fullName: VEDriversLite.NeblioAPI.Tokens3.Divisibility
- uid: VEDriversLite.NeblioAPI.Tokens3.LockStatus*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.LockStatus
  name: LockStatus
  nameWithType: Tokens3.LockStatus
  fullName: VEDriversLite.NeblioAPI.Tokens3.LockStatus
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
  name: AggregationPolicy
  nameWithType: Tokens3.AggregationPolicy
  fullName: VEDriversLite.NeblioAPI.Tokens3.AggregationPolicy
- uid: VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Tokens3.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Tokens3.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
