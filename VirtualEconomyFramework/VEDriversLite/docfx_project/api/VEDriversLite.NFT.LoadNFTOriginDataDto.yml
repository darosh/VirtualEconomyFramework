### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto
  commentId: T:VEDriversLite.NFT.LoadNFTOriginDataDto
  id: LoadNFTOriginDataDto
  parent: VEDriversLite.NFT
  children:
  - VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
  - VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
  - VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
  - VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
  langs:
  - csharp
  - vb
  name: LoadNFTOriginDataDto
  nameWithType: LoadNFTOriginDataDto
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto
  type: Class
  source:
    id: LoadNFTOriginDataDto
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTHelpers.cs
    startLine: 25
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public class LoadNFTOriginDataDto
    content.vb: Public Class LoadNFTOriginDataDto
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
  commentId: P:VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
  id: Utxo
  parent: VEDriversLite.NFT.LoadNFTOriginDataDto
  langs:
  - csharp
  - vb
  name: Utxo
  nameWithType: LoadNFTOriginDataDto.Utxo
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
  type: Property
  source:
    id: Utxo
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTHelpers.cs
    startLine: 27
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public string Utxo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Utxo As String
  overload: VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
  commentId: P:VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
  id: SourceTxId
  parent: VEDriversLite.NFT.LoadNFTOriginDataDto
  langs:
  - csharp
  - vb
  name: SourceTxId
  nameWithType: LoadNFTOriginDataDto.SourceTxId
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
  type: Property
  source:
    id: SourceTxId
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTHelpers.cs
    startLine: 28
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public string SourceTxId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SourceTxId As String
  overload: VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
  commentId: P:VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
  id: NFTOriginTxId
  parent: VEDriversLite.NFT.LoadNFTOriginDataDto
  langs:
  - csharp
  - vb
  name: NFTOriginTxId
  nameWithType: LoadNFTOriginDataDto.NFTOriginTxId
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
  type: Property
  source:
    id: NFTOriginTxId
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTHelpers.cs
    startLine: 29
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public string NFTOriginTxId { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NFTOriginTxId As String
  overload: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
  commentId: P:VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
  id: NFTMetadata
  parent: VEDriversLite.NFT.LoadNFTOriginDataDto
  langs:
  - csharp
  - vb
  name: NFTMetadata
  nameWithType: LoadNFTOriginDataDto.NFTMetadata
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
  type: Property
  source:
    id: NFTMetadata
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTHelpers.cs
    startLine: 30
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public Dictionary<string, string> NFTMetadata { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    content.vb: Public Property NFTMetadata As Dictionary(Of String, String)
  overload: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NFT
  commentId: N:VEDriversLite.NFT
  name: VEDriversLite.NFT
  nameWithType: VEDriversLite.NFT
  fullName: VEDriversLite.NFT
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo*
  commentId: Overload:VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
  name: Utxo
  nameWithType: LoadNFTOriginDataDto.Utxo
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.Utxo
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId*
  commentId: Overload:VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
  name: SourceTxId
  nameWithType: LoadNFTOriginDataDto.SourceTxId
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.SourceTxId
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId*
  commentId: Overload:VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
  name: NFTOriginTxId
  nameWithType: LoadNFTOriginDataDto.NFTOriginTxId
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTOriginTxId
- uid: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata*
  commentId: Overload:VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
  name: NFTMetadata
  nameWithType: LoadNFTOriginDataDto.NFTMetadata
  fullName: VEDriversLite.NFT.LoadNFTOriginDataDto.NFTMetadata
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<String, String>
  nameWithType: Dictionary<String, String>
  fullName: System.Collections.Generic.Dictionary<System.String, System.String>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of System.String, System.String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
