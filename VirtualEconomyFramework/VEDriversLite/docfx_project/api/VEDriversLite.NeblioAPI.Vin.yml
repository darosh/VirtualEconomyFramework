### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Vin
  commentId: T:VEDriversLite.NeblioAPI.Vin
  id: Vin
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Vin.AdditionalProperties
  - VEDriversLite.NeblioAPI.Vin.Addr
  - VEDriversLite.NeblioAPI.Vin.PreviousOutput
  - VEDriversLite.NeblioAPI.Vin.ScriptSig
  - VEDriversLite.NeblioAPI.Vin.Sequence
  - VEDriversLite.NeblioAPI.Vin.Tokens
  - VEDriversLite.NeblioAPI.Vin.Txid
  - VEDriversLite.NeblioAPI.Vin.Value
  - VEDriversLite.NeblioAPI.Vin.ValueSat
  - VEDriversLite.NeblioAPI.Vin.Vout
  langs:
  - csharp
  - vb
  name: Vin
  nameWithType: Vin
  fullName: VEDriversLite.NeblioAPI.Vin
  type: Class
  source:
    id: Vin
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5711
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Vin
    content.vb: Public Class Vin
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Vin.Txid
  commentId: P:VEDriversLite.NeblioAPI.Vin.Txid
  id: Txid
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Txid
  nameWithType: Vin.Txid
  fullName: VEDriversLite.NeblioAPI.Vin.Txid
  type: Property
  source:
    id: Txid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5715
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: TXID of the input
  example: []
  syntax:
    content: >-
      [JsonProperty("txid", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Txid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("txid", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Txid As String
  overload: VEDriversLite.NeblioAPI.Vin.Txid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: txid
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.Addr
  commentId: P:VEDriversLite.NeblioAPI.Vin.Addr
  id: Addr
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Addr
  nameWithType: Vin.Addr
  fullName: VEDriversLite.NeblioAPI.Vin.Addr
  type: Property
  source:
    id: Addr
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5718
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("addr", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Addr { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("addr", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Addr As String
  overload: VEDriversLite.NeblioAPI.Vin.Addr*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: addr
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.Vout
  commentId: P:VEDriversLite.NeblioAPI.Vin.Vout
  id: Vout
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Vout
  nameWithType: Vin.Vout
  fullName: VEDriversLite.NeblioAPI.Vin.Vout
  type: Property
  source:
    id: Vout
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5722
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: output index
  example: []
  syntax:
    content: >-
      [JsonProperty("vout", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Vout { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("vout", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Vout As Double?
  overload: VEDriversLite.NeblioAPI.Vin.Vout*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: vout
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.ScriptSig
  commentId: P:VEDriversLite.NeblioAPI.Vin.ScriptSig
  id: ScriptSig
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: ScriptSig
  nameWithType: Vin.ScriptSig
  fullName: VEDriversLite.NeblioAPI.Vin.ScriptSig
  type: Property
  source:
    id: ScriptSig
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5725
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("scriptSig", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ScriptSig ScriptSig { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.ScriptSig
    content.vb: >-
      <JsonProperty("scriptSig", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ScriptSig As ScriptSig
  overload: VEDriversLite.NeblioAPI.Vin.ScriptSig*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scriptSig
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.Sequence
  commentId: P:VEDriversLite.NeblioAPI.Vin.Sequence
  id: Sequence
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Sequence
  nameWithType: Vin.Sequence
  fullName: VEDriversLite.NeblioAPI.Vin.Sequence
  type: Property
  source:
    id: Sequence
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5728
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("sequence", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Sequence { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("sequence", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Sequence As Double?
  overload: VEDriversLite.NeblioAPI.Vin.Sequence*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: sequence
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.PreviousOutput
  commentId: P:VEDriversLite.NeblioAPI.Vin.PreviousOutput
  id: PreviousOutput
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: PreviousOutput
  nameWithType: Vin.PreviousOutput
  fullName: VEDriversLite.NeblioAPI.Vin.PreviousOutput
  type: Property
  source:
    id: PreviousOutput
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5731
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("previousOutput", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public PreviousOutput PreviousOutput { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.PreviousOutput
    content.vb: >-
      <JsonProperty("previousOutput", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property PreviousOutput As PreviousOutput
  overload: VEDriversLite.NeblioAPI.Vin.PreviousOutput*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: previousOutput
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.Tokens
  commentId: P:VEDriversLite.NeblioAPI.Vin.Tokens
  id: Tokens
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: Vin.Tokens
  fullName: VEDriversLite.NeblioAPI.Vin.Tokens
  type: Property
  source:
    id: Tokens
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5734
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("tokens", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Tokens2> Tokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens2}
    content.vb: >-
      <JsonProperty("tokens", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Tokens As ICollection(Of Tokens2)
  overload: VEDriversLite.NeblioAPI.Vin.Tokens*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tokens
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.Value
  commentId: P:VEDriversLite.NeblioAPI.Vin.Value
  id: Value
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Vin.Value
  fullName: VEDriversLite.NeblioAPI.Vin.Value
  type: Property
  source:
    id: Value
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5738
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Value of input in NEBL satoshi
  example: []
  syntax:
    content: >-
      [JsonProperty("valueSat", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Value { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("valueSat", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Value As Double?
  overload: VEDriversLite.NeblioAPI.Vin.Value*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: valueSat
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.ValueSat
  commentId: P:VEDriversLite.NeblioAPI.Vin.ValueSat
  id: ValueSat
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: ValueSat
  nameWithType: Vin.ValueSat
  fullName: VEDriversLite.NeblioAPI.Vin.ValueSat
  type: Property
  source:
    id: ValueSat
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5742
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Value of input in NEBL
  example: []
  syntax:
    content: >-
      [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? ValueSat { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("value", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ValueSat As Double?
  overload: VEDriversLite.NeblioAPI.Vin.ValueSat*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Vin.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Vin.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Vin
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Vin.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Vin.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5747
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Vin.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Vin.Txid*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Txid
  name: Txid
  nameWithType: Vin.Txid
  fullName: VEDriversLite.NeblioAPI.Vin.Txid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Vin.Addr*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Addr
  name: Addr
  nameWithType: Vin.Addr
  fullName: VEDriversLite.NeblioAPI.Vin.Addr
- uid: VEDriversLite.NeblioAPI.Vin.Vout*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Vout
  name: Vout
  nameWithType: Vin.Vout
  fullName: VEDriversLite.NeblioAPI.Vin.Vout
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Vin.ScriptSig*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.ScriptSig
  name: ScriptSig
  nameWithType: Vin.ScriptSig
  fullName: VEDriversLite.NeblioAPI.Vin.ScriptSig
- uid: VEDriversLite.NeblioAPI.ScriptSig
  commentId: T:VEDriversLite.NeblioAPI.ScriptSig
  parent: VEDriversLite.NeblioAPI
  name: ScriptSig
  nameWithType: ScriptSig
  fullName: VEDriversLite.NeblioAPI.ScriptSig
- uid: VEDriversLite.NeblioAPI.Vin.Sequence*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Sequence
  name: Sequence
  nameWithType: Vin.Sequence
  fullName: VEDriversLite.NeblioAPI.Vin.Sequence
- uid: VEDriversLite.NeblioAPI.Vin.PreviousOutput*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.PreviousOutput
  name: PreviousOutput
  nameWithType: Vin.PreviousOutput
  fullName: VEDriversLite.NeblioAPI.Vin.PreviousOutput
- uid: VEDriversLite.NeblioAPI.PreviousOutput
  commentId: T:VEDriversLite.NeblioAPI.PreviousOutput
  parent: VEDriversLite.NeblioAPI
  name: PreviousOutput
  nameWithType: PreviousOutput
  fullName: VEDriversLite.NeblioAPI.PreviousOutput
- uid: VEDriversLite.NeblioAPI.Vin.Tokens*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Tokens
  name: Tokens
  nameWithType: Vin.Tokens
  fullName: VEDriversLite.NeblioAPI.Vin.Tokens
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens2}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Tokens2>
  nameWithType: ICollection<Tokens2>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Tokens2>
  nameWithType.vb: ICollection(Of Tokens2)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Tokens2)
  name.vb: ICollection(Of Tokens2)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Tokens2
    name: Tokens2
    nameWithType: Tokens2
    fullName: VEDriversLite.NeblioAPI.Tokens2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Tokens2
    name: Tokens2
    nameWithType: Tokens2
    fullName: VEDriversLite.NeblioAPI.Tokens2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.Vin.Value*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.Value
  name: Value
  nameWithType: Vin.Value
  fullName: VEDriversLite.NeblioAPI.Vin.Value
- uid: VEDriversLite.NeblioAPI.Vin.ValueSat*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.ValueSat
  name: ValueSat
  nameWithType: Vin.ValueSat
  fullName: VEDriversLite.NeblioAPI.Vin.ValueSat
- uid: VEDriversLite.NeblioAPI.Vin.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Vin.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Vin.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Vin.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
