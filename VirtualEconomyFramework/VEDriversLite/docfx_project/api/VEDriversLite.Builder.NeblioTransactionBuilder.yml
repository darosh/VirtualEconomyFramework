### YamlMime:ManagedReference
items:
- uid: VEDriversLite.Builder.NeblioTransactionBuilder
  commentId: T:VEDriversLite.Builder.NeblioTransactionBuilder
  id: NeblioTransactionBuilder
  parent: VEDriversLite.Builder
  children:
  - VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction(System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField})
  - VEDriversLite.Builder.NeblioTransactionBuilder.Fee
  - VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
  - VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
  langs:
  - csharp
  - vb
  name: NeblioTransactionBuilder
  nameWithType: NeblioTransactionBuilder
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder
  type: Class
  source:
    id: NeblioTransactionBuilder
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\NeblioTransactionBuilder.cs
    startLine: 12
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public static class NeblioTransactionBuilder
    content.vb: Public Module NeblioTransactionBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
  commentId: P:VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
  id: NeblioNetwork
  parent: VEDriversLite.Builder.NeblioTransactionBuilder
  langs:
  - csharp
  - vb
  name: NeblioNetwork
  nameWithType: NeblioTransactionBuilder.NeblioNetwork
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
  type: Property
  source:
    id: NeblioNetwork
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\NeblioTransactionBuilder.cs
    startLine: 14
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public static Network NeblioNetwork { get; set; }
    parameters: []
    return:
      type: NBitcoin.Network
    content.vb: Public Shared Property NeblioNetwork As Network
  overload: VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork*
  modifiers.csharp:
  - public
  - static
  - get
  - set
  modifiers.vb:
  - Public
  - Shared
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
  commentId: P:VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
  id: MinimumAmount
  parent: VEDriversLite.Builder.NeblioTransactionBuilder
  langs:
  - csharp
  - vb
  name: MinimumAmount
  nameWithType: NeblioTransactionBuilder.MinimumAmount
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
  type: Property
  source:
    id: MinimumAmount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\NeblioTransactionBuilder.cs
    startLine: 15
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public static double MinimumAmount { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Shared ReadOnly Property MinimumAmount As Double
  overload: VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.Fee
  commentId: P:VEDriversLite.Builder.NeblioTransactionBuilder.Fee
  id: Fee
  parent: VEDriversLite.Builder.NeblioTransactionBuilder
  langs:
  - csharp
  - vb
  name: Fee
  nameWithType: NeblioTransactionBuilder.Fee
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.Fee
  type: Property
  source:
    id: Fee
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\NeblioTransactionBuilder.cs
    startLine: 16
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public static double Fee { get; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Shared ReadOnly Property Fee As Double
  overload: VEDriversLite.Builder.NeblioTransactionBuilder.Fee*
  modifiers.csharp:
  - public
  - static
  - get
  modifiers.vb:
  - Public
  - Shared
  - ReadOnly
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction(System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField})
  commentId: M:VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction(System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField})
  id: CreateRawTransaction(System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver},System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField})
  parent: VEDriversLite.Builder.NeblioTransactionBuilder
  langs:
  - csharp
  - vb
  name: CreateRawTransaction(List<NewTokenTxUtxo>, List<NewTokenTxReceiver>, List<NewTokenTxMetaField>)
  nameWithType: NeblioTransactionBuilder.CreateRawTransaction(List<NewTokenTxUtxo>, List<NewTokenTxReceiver>, List<NewTokenTxMetaField>)
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction(System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxUtxo>, System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxReceiver>, System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxMetaField>)
  type: Method
  source:
    id: CreateRawTransaction
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\Builder\NeblioTransactionBuilder.cs
    startLine: 18
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.Builder
  syntax:
    content: public static Task<Transaction> CreateRawTransaction(List<NewTokenTxUtxo> utxos, List<NewTokenTxReceiver> receivers, List<NewTokenTxMetaField> metadata)
    parameters:
    - id: utxos
      type: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo}
    - id: receivers
      type: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver}
    - id: metadata
      type: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField}
    return:
      type: System.Threading.Tasks.Task{NBitcoin.Transaction}
    content.vb: Public Shared Function CreateRawTransaction(utxos As List(Of NewTokenTxUtxo), receivers As List(Of NewTokenTxReceiver), metadata As List(Of NewTokenTxMetaField)) As Task(Of Transaction)
  overload: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction*
  nameWithType.vb: NeblioTransactionBuilder.CreateRawTransaction(List(Of NewTokenTxUtxo), List(Of NewTokenTxReceiver), List(Of NewTokenTxMetaField))
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
  fullName.vb: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction(System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxUtxo), System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxReceiver), System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxMetaField))
  name.vb: CreateRawTransaction(List(Of NewTokenTxUtxo), List(Of NewTokenTxReceiver), List(Of NewTokenTxMetaField))
references:
- uid: VEDriversLite.Builder
  commentId: N:VEDriversLite.Builder
  name: VEDriversLite.Builder
  nameWithType: VEDriversLite.Builder
  fullName: VEDriversLite.Builder
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork*
  commentId: Overload:VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
  name: NeblioNetwork
  nameWithType: NeblioTransactionBuilder.NeblioNetwork
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.NeblioNetwork
- uid: NBitcoin.Network
  commentId: T:NBitcoin.Network
  parent: NBitcoin
  isExternal: true
  name: Network
  nameWithType: Network
  fullName: NBitcoin.Network
- uid: NBitcoin
  commentId: N:NBitcoin
  isExternal: true
  name: NBitcoin
  nameWithType: NBitcoin
  fullName: NBitcoin
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount*
  commentId: Overload:VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
  name: MinimumAmount
  nameWithType: NeblioTransactionBuilder.MinimumAmount
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.MinimumAmount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.Fee*
  commentId: Overload:VEDriversLite.Builder.NeblioTransactionBuilder.Fee
  name: Fee
  nameWithType: NeblioTransactionBuilder.Fee
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.Fee
- uid: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction*
  commentId: Overload:VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction
  name: CreateRawTransaction
  nameWithType: NeblioTransactionBuilder.CreateRawTransaction
  fullName: VEDriversLite.Builder.NeblioTransactionBuilder.CreateRawTransaction
- uid: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo}
  commentId: T:System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxUtxo}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NewTokenTxUtxo>
  nameWithType: List<NewTokenTxUtxo>
  fullName: System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxUtxo>
  nameWithType.vb: List(Of NewTokenTxUtxo)
  fullName.vb: System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxUtxo)
  name.vb: List(Of NewTokenTxUtxo)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.Builder.NewTokenTxUtxo
    name: NewTokenTxUtxo
    nameWithType: NewTokenTxUtxo
    fullName: VEDriversLite.Builder.NewTokenTxUtxo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.Builder.NewTokenTxUtxo
    name: NewTokenTxUtxo
    nameWithType: NewTokenTxUtxo
    fullName: VEDriversLite.Builder.NewTokenTxUtxo
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver}
  commentId: T:System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxReceiver}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NewTokenTxReceiver>
  nameWithType: List<NewTokenTxReceiver>
  fullName: System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxReceiver>
  nameWithType.vb: List(Of NewTokenTxReceiver)
  fullName.vb: System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxReceiver)
  name.vb: List(Of NewTokenTxReceiver)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.Builder.NewTokenTxReceiver
    name: NewTokenTxReceiver
    nameWithType: NewTokenTxReceiver
    fullName: VEDriversLite.Builder.NewTokenTxReceiver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.Builder.NewTokenTxReceiver
    name: NewTokenTxReceiver
    nameWithType: NewTokenTxReceiver
    fullName: VEDriversLite.Builder.NewTokenTxReceiver
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField}
  commentId: T:System.Collections.Generic.List{VEDriversLite.Builder.NewTokenTxMetaField}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<NewTokenTxMetaField>
  nameWithType: List<NewTokenTxMetaField>
  fullName: System.Collections.Generic.List<VEDriversLite.Builder.NewTokenTxMetaField>
  nameWithType.vb: List(Of NewTokenTxMetaField)
  fullName.vb: System.Collections.Generic.List(Of VEDriversLite.Builder.NewTokenTxMetaField)
  name.vb: List(Of NewTokenTxMetaField)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.Builder.NewTokenTxMetaField
    name: NewTokenTxMetaField
    nameWithType: NewTokenTxMetaField
    fullName: VEDriversLite.Builder.NewTokenTxMetaField
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.Builder.NewTokenTxMetaField
    name: NewTokenTxMetaField
    nameWithType: NewTokenTxMetaField
    fullName: VEDriversLite.Builder.NewTokenTxMetaField
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task{NBitcoin.Transaction}
  commentId: T:System.Threading.Tasks.Task{NBitcoin.Transaction}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<Transaction>
  nameWithType: Task<Transaction>
  fullName: System.Threading.Tasks.Task<NBitcoin.Transaction>
  nameWithType.vb: Task(Of Transaction)
  fullName.vb: System.Threading.Tasks.Task(Of NBitcoin.Transaction)
  name.vb: Task(Of Transaction)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: NBitcoin.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: NBitcoin.Transaction
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: NBitcoin.Transaction
    name: Transaction
    nameWithType: Transaction
    fullName: NBitcoin.Transaction
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
