### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Metadata2
  commentId: T:VEDriversLite.NeblioAPI.Metadata2
  id: Metadata2
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
  - VEDriversLite.NeblioAPI.Metadata2.Description
  - VEDriversLite.NeblioAPI.Metadata2.Encryptions
  - VEDriversLite.NeblioAPI.Metadata2.Issuer
  - VEDriversLite.NeblioAPI.Metadata2.Rules
  - VEDriversLite.NeblioAPI.Metadata2.TokenName
  - VEDriversLite.NeblioAPI.Metadata2.Urls
  - VEDriversLite.NeblioAPI.Metadata2.UserData
  langs:
  - csharp
  - vb
  name: Metadata2
  nameWithType: Metadata2
  fullName: VEDriversLite.NeblioAPI.Metadata2
  type: Class
  source:
    id: Metadata2
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5989
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Metadata2
    content.vb: Public Class Metadata2
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Metadata2.TokenName
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.TokenName
  id: TokenName
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: TokenName
  nameWithType: Metadata2.TokenName
  fullName: VEDriversLite.NeblioAPI.Metadata2.TokenName
  type: Property
  source:
    id: TokenName
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5993
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Token Symbol it will be identified by (ex. NIBBL)
  example: []
  syntax:
    content: >-
      [JsonProperty("tokenName", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string TokenName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("tokenName", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property TokenName As String
  overload: VEDriversLite.NeblioAPI.Metadata2.TokenName*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tokenName
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.Issuer
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.Issuer
  id: Issuer
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: Issuer
  nameWithType: Metadata2.Issuer
  fullName: VEDriversLite.NeblioAPI.Metadata2.Issuer
  type: Property
  source:
    id: Issuer
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5997
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Name of token issuer
  example: []
  syntax:
    content: >-
      [JsonProperty("issuer", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Issuer { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("issuer", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Issuer As String
  overload: VEDriversLite.NeblioAPI.Metadata2.Issuer*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: issuer
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.Description
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.Description
  id: Description
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: Description
  nameWithType: Metadata2.Description
  fullName: VEDriversLite.NeblioAPI.Metadata2.Description
  type: Property
  source:
    id: Description
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6001
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Long name or description of token (ex. Nibble)
  example: []
  syntax:
    content: >-
      [JsonProperty("description", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Description { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("description", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Description As String
  overload: VEDriversLite.NeblioAPI.Metadata2.Description*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: description
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.Urls
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.Urls
  id: Urls
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: Urls
  nameWithType: Metadata2.Urls
  fullName: VEDriversLite.NeblioAPI.Metadata2.Urls
  type: Property
  source:
    id: Urls
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6004
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonProperty("urls", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Urls2> Urls { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Urls2}
    content.vb: >-
      <JsonProperty("urls", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Urls As ICollection(Of Urls2)
  overload: VEDriversLite.NeblioAPI.Metadata2.Urls*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: urls
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.UserData
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.UserData
  id: UserData
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: UserData
  nameWithType: Metadata2.UserData
  fullName: VEDriversLite.NeblioAPI.Metadata2.UserData
  type: Property
  source:
    id: UserData
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6008
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Metadata set by user on token
  example: []
  syntax:
    content: >-
      [JsonProperty("userData", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public UserData3 UserData { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.UserData3
    content.vb: >-
      <JsonProperty("userData", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property UserData As UserData3
  overload: VEDriversLite.NeblioAPI.Metadata2.UserData*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: userData
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.Encryptions
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.Encryptions
  id: Encryptions
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: Encryptions
  nameWithType: Metadata2.Encryptions
  fullName: VEDriversLite.NeblioAPI.Metadata2.Encryptions
  type: Property
  source:
    id: Encryptions
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6012
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Array of encryption instruction objects for encrypting userData
  example: []
  syntax:
    content: >-
      [JsonProperty("encryptions", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Encryptions2> Encryptions { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Encryptions2}
    content.vb: >-
      <JsonProperty("encryptions", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Encryptions As ICollection(Of Encryptions2)
  overload: VEDriversLite.NeblioAPI.Metadata2.Encryptions*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: encryptions
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.Rules
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.Rules
  id: Rules
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: Rules
  nameWithType: Metadata2.Rules
  fullName: VEDriversLite.NeblioAPI.Metadata2.Rules
  type: Property
  source:
    id: Rules
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6016
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Object describing token rules
  example: []
  syntax:
    content: >-
      [JsonProperty("rules", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public Rules2 Rules { get; set; }
    parameters: []
    return:
      type: VEDriversLite.NeblioAPI.Rules2
    content.vb: >-
      <JsonProperty("rules", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Rules As Rules2
  overload: VEDriversLite.NeblioAPI.Metadata2.Rules*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: rules
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Metadata2
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Metadata2.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 6021
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Metadata2.TokenName*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.TokenName
  name: TokenName
  nameWithType: Metadata2.TokenName
  fullName: VEDriversLite.NeblioAPI.Metadata2.TokenName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Metadata2.Issuer*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.Issuer
  name: Issuer
  nameWithType: Metadata2.Issuer
  fullName: VEDriversLite.NeblioAPI.Metadata2.Issuer
- uid: VEDriversLite.NeblioAPI.Metadata2.Description*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.Description
  name: Description
  nameWithType: Metadata2.Description
  fullName: VEDriversLite.NeblioAPI.Metadata2.Description
- uid: VEDriversLite.NeblioAPI.Metadata2.Urls*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.Urls
  name: Urls
  nameWithType: Metadata2.Urls
  fullName: VEDriversLite.NeblioAPI.Metadata2.Urls
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Urls2}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Urls2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Urls2>
  nameWithType: ICollection<Urls2>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Urls2>
  nameWithType.vb: ICollection(Of Urls2)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Urls2)
  name.vb: ICollection(Of Urls2)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Urls2
    name: Urls2
    nameWithType: Urls2
    fullName: VEDriversLite.NeblioAPI.Urls2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Urls2
    name: Urls2
    nameWithType: Urls2
    fullName: VEDriversLite.NeblioAPI.Urls2
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.Metadata2.UserData*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.UserData
  name: UserData
  nameWithType: Metadata2.UserData
  fullName: VEDriversLite.NeblioAPI.Metadata2.UserData
- uid: VEDriversLite.NeblioAPI.UserData3
  commentId: T:VEDriversLite.NeblioAPI.UserData3
  parent: VEDriversLite.NeblioAPI
  name: UserData3
  nameWithType: UserData3
  fullName: VEDriversLite.NeblioAPI.UserData3
- uid: VEDriversLite.NeblioAPI.Metadata2.Encryptions*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.Encryptions
  name: Encryptions
  nameWithType: Metadata2.Encryptions
  fullName: VEDriversLite.NeblioAPI.Metadata2.Encryptions
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Encryptions2}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Encryptions2}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Encryptions2>
  nameWithType: ICollection<Encryptions2>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Encryptions2>
  nameWithType.vb: ICollection(Of Encryptions2)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Encryptions2)
  name.vb: ICollection(Of Encryptions2)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Encryptions2
    name: Encryptions2
    nameWithType: Encryptions2
    fullName: VEDriversLite.NeblioAPI.Encryptions2
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Encryptions2
    name: Encryptions2
    nameWithType: Encryptions2
    fullName: VEDriversLite.NeblioAPI.Encryptions2
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Metadata2.Rules*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.Rules
  name: Rules
  nameWithType: Metadata2.Rules
  fullName: VEDriversLite.NeblioAPI.Metadata2.Rules
- uid: VEDriversLite.NeblioAPI.Rules2
  commentId: T:VEDriversLite.NeblioAPI.Rules2
  parent: VEDriversLite.NeblioAPI
  name: Rules2
  nameWithType: Rules2
  fullName: VEDriversLite.NeblioAPI.Rules2
- uid: VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Metadata2.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Metadata2.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
