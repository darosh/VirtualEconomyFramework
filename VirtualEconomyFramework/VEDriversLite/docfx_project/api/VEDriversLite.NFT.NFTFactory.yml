### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NFT.NFTFactory
  commentId: T:VEDriversLite.NFT.NFTFactory
  id: NFTFactory
  parent: VEDriversLite.NFT
  children:
  - VEDriversLite.NFT.NFTFactory.CloneNFT(VEDriversLite.NFT.INFT,System.Boolean,VEDriversLite.NFT.NFTTypes)
  - VEDriversLite.NFT.NFTFactory.GetNFT(System.String,System.String,System.Double,System.Boolean)
  langs:
  - csharp
  - vb
  name: NFTFactory
  nameWithType: NFTFactory
  fullName: VEDriversLite.NFT.NFTFactory
  type: Class
  source:
    id: NFTFactory
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTFactory.cs
    startLine: 8
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public static class NFTFactory
    content.vb: Public Module NFTFactory
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - static
  - class
  modifiers.vb:
  - Public
  - Module
- uid: VEDriversLite.NFT.NFTFactory.GetNFT(System.String,System.String,System.Double,System.Boolean)
  commentId: M:VEDriversLite.NFT.NFTFactory.GetNFT(System.String,System.String,System.Double,System.Boolean)
  id: GetNFT(System.String,System.String,System.Double,System.Boolean)
  parent: VEDriversLite.NFT.NFTFactory
  langs:
  - csharp
  - vb
  name: GetNFT(String, String, Double, Boolean)
  nameWithType: NFTFactory.GetNFT(String, String, Double, Boolean)
  fullName: VEDriversLite.NFT.NFTFactory.GetNFT(System.String, System.String, System.Double, System.Boolean)
  type: Method
  source:
    id: GetNFT
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTFactory.cs
    startLine: 10
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public static Task<INFT> GetNFT(string tokenId, string utxo, double time = 0, bool wait = false)
    parameters:
    - id: tokenId
      type: System.String
    - id: utxo
      type: System.String
    - id: time
      type: System.Double
    - id: wait
      type: System.Boolean
    return:
      type: System.Threading.Tasks.Task{VEDriversLite.NFT.INFT}
    content.vb: Public Shared Function GetNFT(tokenId As String, utxo As String, time As Double = 0, wait As Boolean = False) As Task(Of INFT)
  overload: VEDriversLite.NFT.NFTFactory.GetNFT*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: VEDriversLite.NFT.NFTFactory.CloneNFT(VEDriversLite.NFT.INFT,System.Boolean,VEDriversLite.NFT.NFTTypes)
  commentId: M:VEDriversLite.NFT.NFTFactory.CloneNFT(VEDriversLite.NFT.INFT,System.Boolean,VEDriversLite.NFT.NFTTypes)
  id: CloneNFT(VEDriversLite.NFT.INFT,System.Boolean,VEDriversLite.NFT.NFTTypes)
  parent: VEDriversLite.NFT.NFTFactory
  langs:
  - csharp
  - vb
  name: CloneNFT(INFT, Boolean, NFTTypes)
  nameWithType: NFTFactory.CloneNFT(INFT, Boolean, NFTTypes)
  fullName: VEDriversLite.NFT.NFTFactory.CloneNFT(VEDriversLite.NFT.INFT, System.Boolean, VEDriversLite.NFT.NFTTypes)
  type: Method
  source:
    id: CloneNFT
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NFT\NFTFactory.cs
    startLine: 132
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NFT
  syntax:
    content: public static Task<INFT> CloneNFT(INFT NFT, bool asType = false, NFTTypes type = NFTTypes.Image)
    parameters:
    - id: NFT
      type: VEDriversLite.NFT.INFT
    - id: asType
      type: System.Boolean
    - id: type
      type: VEDriversLite.NFT.NFTTypes
    return:
      type: System.Threading.Tasks.Task{VEDriversLite.NFT.INFT}
    content.vb: Public Shared Function CloneNFT(NFT As INFT, asType As Boolean = False, type As NFTTypes = NFTTypes.Image) As Task(Of INFT)
  overload: VEDriversLite.NFT.NFTFactory.CloneNFT*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
references:
- uid: VEDriversLite.NFT
  commentId: N:VEDriversLite.NFT
  name: VEDriversLite.NFT
  nameWithType: VEDriversLite.NFT
  fullName: VEDriversLite.NFT
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NFT.NFTFactory.GetNFT*
  commentId: Overload:VEDriversLite.NFT.NFTFactory.GetNFT
  name: GetNFT
  nameWithType: NFTFactory.GetNFT
  fullName: VEDriversLite.NFT.NFTFactory.GetNFT
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Threading.Tasks.Task{VEDriversLite.NFT.INFT}
  commentId: T:System.Threading.Tasks.Task{VEDriversLite.NFT.INFT}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  name: Task<INFT>
  nameWithType: Task<INFT>
  fullName: System.Threading.Tasks.Task<VEDriversLite.NFT.INFT>
  nameWithType.vb: Task(Of INFT)
  fullName.vb: System.Threading.Tasks.Task(Of VEDriversLite.NFT.INFT)
  name.vb: Task(Of INFT)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NFT.INFT
    name: INFT
    nameWithType: INFT
    fullName: VEDriversLite.NFT.INFT
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NFT.INFT
    name: INFT
    nameWithType: INFT
    fullName: VEDriversLite.NFT.INFT
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: System.Threading.Tasks.Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TResult
    nameWithType: TResult
    fullName: TResult
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
- uid: VEDriversLite.NFT.NFTFactory.CloneNFT*
  commentId: Overload:VEDriversLite.NFT.NFTFactory.CloneNFT
  name: CloneNFT
  nameWithType: NFTFactory.CloneNFT
  fullName: VEDriversLite.NFT.NFTFactory.CloneNFT
- uid: VEDriversLite.NFT.INFT
  commentId: T:VEDriversLite.NFT.INFT
  parent: VEDriversLite.NFT
  name: INFT
  nameWithType: INFT
  fullName: VEDriversLite.NFT.INFT
- uid: VEDriversLite.NFT.NFTTypes
  commentId: T:VEDriversLite.NFT.NFTTypes
  parent: VEDriversLite.NFT
  name: NFTTypes
  nameWithType: NFTTypes
  fullName: VEDriversLite.NFT.NFTTypes
