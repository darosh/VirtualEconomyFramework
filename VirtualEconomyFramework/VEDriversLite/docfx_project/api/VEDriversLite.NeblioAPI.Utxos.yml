### YamlMime:ManagedReference
items:
- uid: VEDriversLite.NeblioAPI.Utxos
  commentId: T:VEDriversLite.NeblioAPI.Utxos
  id: Utxos
  parent: VEDriversLite.NeblioAPI
  children:
  - VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
  - VEDriversLite.NeblioAPI.Utxos.Blockheight
  - VEDriversLite.NeblioAPI.Utxos.Blocktime
  - VEDriversLite.NeblioAPI.Utxos.Index
  - VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
  - VEDriversLite.NeblioAPI.Utxos.Tokens
  - VEDriversLite.NeblioAPI.Utxos.Txid
  - VEDriversLite.NeblioAPI.Utxos.Used
  - VEDriversLite.NeblioAPI.Utxos.Value
  langs:
  - csharp
  - vb
  name: Utxos
  nameWithType: Utxos
  fullName: VEDriversLite.NeblioAPI.Utxos
  type: Class
  source:
    id: Utxos
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5663
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: public class Utxos
    content.vb: Public Class Utxos
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.NeblioAPI.Utxos.Index
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Index
  id: Index
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Index
  nameWithType: Utxos.Index
  fullName: VEDriversLite.NeblioAPI.Utxos.Index
  type: Property
  source:
    id: Index
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5667
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Index of the UTXO at this address
  example: []
  syntax:
    content: >-
      [JsonProperty("index", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Index { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("index", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Index As Double?
  overload: VEDriversLite.NeblioAPI.Utxos.Index*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: index
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Txid
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Txid
  id: Txid
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Txid
  nameWithType: Utxos.Txid
  fullName: VEDriversLite.NeblioAPI.Utxos.Txid
  type: Property
  source:
    id: Txid
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5671
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Txid of this UTXO
  example: []
  syntax:
    content: >-
      [JsonProperty("txid", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public string Txid { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonProperty("txid", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Txid As String
  overload: VEDriversLite.NeblioAPI.Utxos.Txid*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: txid
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Blockheight
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Blockheight
  id: Blockheight
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Blockheight
  nameWithType: Utxos.Blockheight
  fullName: VEDriversLite.NeblioAPI.Utxos.Blockheight
  type: Property
  source:
    id: Blockheight
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5675
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Blockheight of the UTXO
  example: []
  syntax:
    content: >-
      [JsonProperty("blockheight", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Blockheight { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("blockheight", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blockheight As Double?
  overload: VEDriversLite.NeblioAPI.Utxos.Blockheight*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blockheight
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Blocktime
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Blocktime
  id: Blocktime
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Blocktime
  nameWithType: Utxos.Blocktime
  fullName: VEDriversLite.NeblioAPI.Utxos.Blocktime
  type: Property
  source:
    id: Blocktime
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5680
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Blocktime of the UTXO
  example: []
  syntax:
    content: >-
      [JsonProperty("blocktime", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Blocktime { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("blocktime", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Blocktime As Double?
  overload: VEDriversLite.NeblioAPI.Utxos.Blocktime*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: blocktime
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
  commentId: P:VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
  id: ScriptPubKey
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: ScriptPubKey
  nameWithType: Utxos.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
  type: Property
  source:
    id: ScriptPubKey
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5684
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Object representing the scruptPubKey of the UTXO
  example: []
  syntax:
    content: >-
      [JsonProperty("scriptPubKey", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public object ScriptPubKey { get; set; }
    parameters: []
    return:
      type: System.Object
    content.vb: >-
      <JsonProperty("scriptPubKey", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property ScriptPubKey As Object
  overload: VEDriversLite.NeblioAPI.Utxos.ScriptPubKey*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: scriptPubKey
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Used
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Used
  id: Used
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Used
  nameWithType: Utxos.Used
  fullName: VEDriversLite.NeblioAPI.Utxos.Used
  type: Property
  source:
    id: Used
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5688
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Whether the UTXO has been used
  example: []
  syntax:
    content: >-
      [JsonProperty("used", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public bool? Used { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Boolean}
    content.vb: >-
      <JsonProperty("used", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Used As Boolean?
  overload: VEDriversLite.NeblioAPI.Utxos.Used*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: used
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Value
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Value
  id: Value
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Value
  nameWithType: Utxos.Value
  fullName: VEDriversLite.NeblioAPI.Utxos.Value
  type: Property
  source:
    id: Value
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5692
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Value of the UTXO in NEBL satoshi
  example: []
  syntax:
    content: >-
      [JsonProperty("value", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public double? Value { get; set; }
    parameters: []
    return:
      type: System.Nullable{System.Double}
    content.vb: >-
      <JsonProperty("value", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Value As Double?
  overload: VEDriversLite.NeblioAPI.Utxos.Value*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: value
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.Tokens
  commentId: P:VEDriversLite.NeblioAPI.Utxos.Tokens
  id: Tokens
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: Tokens
  nameWithType: Utxos.Tokens
  fullName: VEDriversLite.NeblioAPI.Utxos.Tokens
  type: Property
  source:
    id: Tokens
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5696
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  summary: Array of NTP1 tokens in this UTXO.
  example: []
  syntax:
    content: >-
      [JsonProperty("tokens", Required = Required.DisallowNull, NullValueHandling = NullValueHandling.Ignore)]

      public ICollection<Tokens> Tokens { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens}
    content.vb: >-
      <JsonProperty("tokens", Required:=Required.DisallowNull, NullValueHandling:=NullValueHandling.Ignore)>

      Public Property Tokens As ICollection(Of Tokens)
  overload: VEDriversLite.NeblioAPI.Utxos.Tokens*
  attributes:
  - type: Newtonsoft.Json.JsonPropertyAttribute
    ctor: Newtonsoft.Json.JsonPropertyAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: tokens
    namedArguments:
    - name: Required
      type: Newtonsoft.Json.Required
      value: 3
    - name: NullValueHandling
      type: Newtonsoft.Json.NullValueHandling
      value: 1
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
  commentId: P:VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
  id: AdditionalProperties
  parent: VEDriversLite.NeblioAPI.Utxos
  langs:
  - csharp
  - vb
  name: AdditionalProperties
  nameWithType: Utxos.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
  type: Property
  source:
    id: AdditionalProperties
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\NeblioAPI\NeblioRestApi.cs
    startLine: 5701
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite.NeblioAPI
  syntax:
    content: >-
      [JsonExtensionData]

      public IDictionary<string, object> AdditionalProperties { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
    content.vb: >-
      <JsonExtensionData>

      Public Property AdditionalProperties As IDictionary(Of String, Object)
  overload: VEDriversLite.NeblioAPI.Utxos.AdditionalProperties*
  attributes:
  - type: Newtonsoft.Json.JsonExtensionDataAttribute
    ctor: Newtonsoft.Json.JsonExtensionDataAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite.NeblioAPI
  commentId: N:VEDriversLite.NeblioAPI
  name: VEDriversLite.NeblioAPI
  nameWithType: VEDriversLite.NeblioAPI
  fullName: VEDriversLite.NeblioAPI
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.NeblioAPI.Utxos.Index*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Index
  name: Index
  nameWithType: Utxos.Index
  fullName: VEDriversLite.NeblioAPI.Utxos.Index
- uid: System.Nullable{System.Double}
  commentId: T:System.Nullable{System.Double}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Double>
  nameWithType: Nullable<Double>
  fullName: System.Nullable<System.Double>
  nameWithType.vb: Nullable(Of Double)
  fullName.vb: System.Nullable(Of System.Double)
  name.vb: Nullable(Of Double)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Double
    name: Double
    nameWithType: Double
    fullName: System.Double
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Utxos.Txid*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Txid
  name: Txid
  nameWithType: Utxos.Txid
  fullName: VEDriversLite.NeblioAPI.Utxos.Txid
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.NeblioAPI.Utxos.Blockheight*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Blockheight
  name: Blockheight
  nameWithType: Utxos.Blockheight
  fullName: VEDriversLite.NeblioAPI.Utxos.Blockheight
- uid: VEDriversLite.NeblioAPI.Utxos.Blocktime*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Blocktime
  name: Blocktime
  nameWithType: Utxos.Blocktime
  fullName: VEDriversLite.NeblioAPI.Utxos.Blocktime
- uid: VEDriversLite.NeblioAPI.Utxos.ScriptPubKey*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
  name: ScriptPubKey
  nameWithType: Utxos.ScriptPubKey
  fullName: VEDriversLite.NeblioAPI.Utxos.ScriptPubKey
- uid: VEDriversLite.NeblioAPI.Utxos.Used*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Used
  name: Used
  nameWithType: Utxos.Used
  fullName: VEDriversLite.NeblioAPI.Utxos.Used
- uid: System.Nullable{System.Boolean}
  commentId: T:System.Nullable{System.Boolean}
  parent: System
  definition: System.Nullable`1
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  nameWithType.vb: Nullable(Of Boolean)
  fullName.vb: System.Nullable(Of System.Boolean)
  name.vb: Nullable(Of Boolean)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: System.Nullable
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.NeblioAPI.Utxos.Value*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Value
  name: Value
  nameWithType: Utxos.Value
  fullName: VEDriversLite.NeblioAPI.Utxos.Value
- uid: VEDriversLite.NeblioAPI.Utxos.Tokens*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.Tokens
  name: Tokens
  nameWithType: Utxos.Tokens
  fullName: VEDriversLite.NeblioAPI.Utxos.Tokens
- uid: System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens}
  commentId: T:System.Collections.Generic.ICollection{VEDriversLite.NeblioAPI.Tokens}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<Tokens>
  nameWithType: ICollection<Tokens>
  fullName: System.Collections.Generic.ICollection<VEDriversLite.NeblioAPI.Tokens>
  nameWithType.vb: ICollection(Of Tokens)
  fullName.vb: System.Collections.Generic.ICollection(Of VEDriversLite.NeblioAPI.Tokens)
  name.vb: ICollection(Of Tokens)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: VEDriversLite.NeblioAPI.Tokens
    name: Tokens
    nameWithType: Tokens
    fullName: VEDriversLite.NeblioAPI.Tokens
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: VEDriversLite.NeblioAPI.Tokens
    name: Tokens
    nameWithType: Tokens
    fullName: VEDriversLite.NeblioAPI.Tokens
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.NeblioAPI.Utxos.AdditionalProperties*
  commentId: Overload:VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
  name: AdditionalProperties
  nameWithType: Utxos.AdditionalProperties
  fullName: VEDriversLite.NeblioAPI.Utxos.AdditionalProperties
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, Object>
  nameWithType: IDictionary<String, Object>
  fullName: System.Collections.Generic.IDictionary<System.String, System.Object>
  nameWithType.vb: IDictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.Object)
  name.vb: IDictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
