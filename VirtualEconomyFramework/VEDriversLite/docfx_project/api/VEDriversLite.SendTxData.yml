### YamlMime:ManagedReference
items:
- uid: VEDriversLite.SendTxData
  commentId: T:VEDriversLite.SendTxData
  id: SendTxData
  parent: VEDriversLite
  children:
  - VEDriversLite.SendTxData.#ctor
  - VEDriversLite.SendTxData.Amount
  - VEDriversLite.SendTxData.CustomMessage
  - VEDriversLite.SendTxData.Id
  - VEDriversLite.SendTxData.Password
  - VEDriversLite.SendTxData.ReceiverAddress
  - VEDriversLite.SendTxData.SenderAddress
  - VEDriversLite.SendTxData.Symbol
  langs:
  - csharp
  - vb
  name: SendTxData
  nameWithType: SendTxData
  fullName: VEDriversLite.SendTxData
  type: Class
  source:
    id: SendTxData
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 11
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nData carrier for sending classic cryptocurrency transaction\n"
  example: []
  syntax:
    content: public class SendTxData
    content.vb: Public Class SendTxData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.SendTxData.#ctor
  commentId: M:VEDriversLite.SendTxData.#ctor
  id: '#ctor'
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: SendTxData()
  nameWithType: SendTxData.SendTxData()
  fullName: VEDriversLite.SendTxData.SendTxData()
  type: Constructor
  source:
    id: .ctor
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 13
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  syntax:
    content: public SendTxData()
    content.vb: Public Sub New
  overload: VEDriversLite.SendTxData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.SenderAddress
  commentId: P:VEDriversLite.SendTxData.SenderAddress
  id: SenderAddress
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: SenderAddress
  nameWithType: SendTxData.SenderAddress
  fullName: VEDriversLite.SendTxData.SenderAddress
  type: Property
  source:
    id: SenderAddress
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 19
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAddress from where token will be send\n"
  example: []
  syntax:
    content: public string SenderAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SenderAddress As String
  overload: VEDriversLite.SendTxData.SenderAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.Password
  commentId: P:VEDriversLite.SendTxData.Password
  id: Password
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: SendTxData.Password
  fullName: VEDriversLite.SendTxData.Password
  type: Property
  source:
    id: Password
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 24
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nIf the account is locked you can provide password directly in the send token api command\nif the account is unlocked or the QT wallet is connected fill empty string\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: VEDriversLite.SendTxData.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.ReceiverAddress
  commentId: P:VEDriversLite.SendTxData.ReceiverAddress
  id: ReceiverAddress
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: ReceiverAddress
  nameWithType: SendTxData.ReceiverAddress
  fullName: VEDriversLite.SendTxData.ReceiverAddress
  type: Property
  source:
    id: ReceiverAddress
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 28
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAddress where token will be send\n"
  example: []
  syntax:
    content: public string ReceiverAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReceiverAddress As String
  overload: VEDriversLite.SendTxData.ReceiverAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.Symbol
  commentId: P:VEDriversLite.SendTxData.Symbol
  id: Symbol
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: Symbol
  nameWithType: SendTxData.Symbol
  fullName: VEDriversLite.SendTxData.Symbol
  type: Property
  source:
    id: Symbol
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 32
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nSymbol of token\n"
  example: []
  syntax:
    content: public string Symbol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Symbol As String
  overload: VEDriversLite.SendTxData.Symbol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.Id
  commentId: P:VEDriversLite.SendTxData.Id
  id: Id
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SendTxData.Id
  fullName: VEDriversLite.SendTxData.Id
  type: Property
  source:
    id: Id
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 36
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nId of token\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: VEDriversLite.SendTxData.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.Amount
  commentId: P:VEDriversLite.SendTxData.Amount
  id: Amount
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: SendTxData.Amount
  fullName: VEDriversLite.SendTxData.Amount
  type: Property
  source:
    id: Amount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 40
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAmount of the currency\n"
  example: []
  syntax:
    content: public double Amount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Amount As Double
  overload: VEDriversLite.SendTxData.Amount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTxData.CustomMessage
  commentId: P:VEDriversLite.SendTxData.CustomMessage
  id: CustomMessage
  parent: VEDriversLite.SendTxData
  langs:
  - csharp
  - vb
  name: CustomMessage
  nameWithType: SendTxData.CustomMessage
  fullName: VEDriversLite.SendTxData.CustomMessage
  type: Property
  source:
    id: CustomMessage
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTxData.cs
    startLine: 44
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nCustom message if it is supported by currency, not implemented yet\n"
  example: []
  syntax:
    content: public string CustomMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property CustomMessage As String
  overload: VEDriversLite.SendTxData.CustomMessage*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite
  commentId: N:VEDriversLite
  name: VEDriversLite
  nameWithType: VEDriversLite
  fullName: VEDriversLite
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.SendTxData.#ctor*
  commentId: Overload:VEDriversLite.SendTxData.#ctor
  name: SendTxData
  nameWithType: SendTxData.SendTxData
  fullName: VEDriversLite.SendTxData.SendTxData
- uid: VEDriversLite.SendTxData.SenderAddress*
  commentId: Overload:VEDriversLite.SendTxData.SenderAddress
  name: SenderAddress
  nameWithType: SendTxData.SenderAddress
  fullName: VEDriversLite.SendTxData.SenderAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.SendTxData.Password*
  commentId: Overload:VEDriversLite.SendTxData.Password
  name: Password
  nameWithType: SendTxData.Password
  fullName: VEDriversLite.SendTxData.Password
- uid: VEDriversLite.SendTxData.ReceiverAddress*
  commentId: Overload:VEDriversLite.SendTxData.ReceiverAddress
  name: ReceiverAddress
  nameWithType: SendTxData.ReceiverAddress
  fullName: VEDriversLite.SendTxData.ReceiverAddress
- uid: VEDriversLite.SendTxData.Symbol*
  commentId: Overload:VEDriversLite.SendTxData.Symbol
  name: Symbol
  nameWithType: SendTxData.Symbol
  fullName: VEDriversLite.SendTxData.Symbol
- uid: VEDriversLite.SendTxData.Id*
  commentId: Overload:VEDriversLite.SendTxData.Id
  name: Id
  nameWithType: SendTxData.Id
  fullName: VEDriversLite.SendTxData.Id
- uid: VEDriversLite.SendTxData.Amount*
  commentId: Overload:VEDriversLite.SendTxData.Amount
  name: Amount
  nameWithType: SendTxData.Amount
  fullName: VEDriversLite.SendTxData.Amount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VEDriversLite.SendTxData.CustomMessage*
  commentId: Overload:VEDriversLite.SendTxData.CustomMessage
  name: CustomMessage
  nameWithType: SendTxData.CustomMessage
  fullName: VEDriversLite.SendTxData.CustomMessage
