### YamlMime:ManagedReference
items:
- uid: VEDriversLite.SendTokenTxData
  commentId: T:VEDriversLite.SendTokenTxData
  id: SendTokenTxData
  parent: VEDriversLite
  children:
  - VEDriversLite.SendTokenTxData.#ctor
  - VEDriversLite.SendTokenTxData.Amount
  - VEDriversLite.SendTokenTxData.Id
  - VEDriversLite.SendTokenTxData.Metadata
  - VEDriversLite.SendTokenTxData.NeblUtxo
  - VEDriversLite.SendTokenTxData.Password
  - VEDriversLite.SendTokenTxData.ReceiverAddress
  - VEDriversLite.SendTokenTxData.SenderAddress
  - VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
  - VEDriversLite.SendTokenTxData.sendUtxo
  - VEDriversLite.SendTokenTxData.Symbol
  - VEDriversLite.SendTokenTxData.UseRPCPrimarily
  langs:
  - csharp
  - vb
  name: SendTokenTxData
  nameWithType: SendTokenTxData
  fullName: VEDriversLite.SendTokenTxData
  type: Class
  source:
    id: SendTokenTxData
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 11
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nData carrier for sending token\n"
  example: []
  syntax:
    content: public class SendTokenTxData
    content.vb: Public Class SendTokenTxData
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: VEDriversLite.SendTokenTxData.#ctor
  commentId: M:VEDriversLite.SendTokenTxData.#ctor
  id: '#ctor'
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: SendTokenTxData()
  nameWithType: SendTokenTxData.SendTokenTxData()
  fullName: VEDriversLite.SendTokenTxData.SendTokenTxData()
  type: Constructor
  source:
    id: .ctor
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 13
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  syntax:
    content: public SendTokenTxData()
    content.vb: Public Sub New
  overload: VEDriversLite.SendTokenTxData.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.SenderAddress
  commentId: P:VEDriversLite.SendTokenTxData.SenderAddress
  id: SenderAddress
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: SenderAddress
  nameWithType: SendTokenTxData.SenderAddress
  fullName: VEDriversLite.SendTokenTxData.SenderAddress
  type: Property
  source:
    id: SenderAddress
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 20
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAddress from where token will be send\n"
  example: []
  syntax:
    content: public string SenderAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property SenderAddress As String
  overload: VEDriversLite.SendTokenTxData.SenderAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.Password
  commentId: P:VEDriversLite.SendTokenTxData.Password
  id: Password
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: Password
  nameWithType: SendTokenTxData.Password
  fullName: VEDriversLite.SendTokenTxData.Password
  type: Property
  source:
    id: Password
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 25
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nIf the account is locked you can provide password directly in the send token api command\nif the account is unlocked or the QT wallet is connected fill empty string\n"
  example: []
  syntax:
    content: public string Password { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Password As String
  overload: VEDriversLite.SendTokenTxData.Password*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.ReceiverAddress
  commentId: P:VEDriversLite.SendTokenTxData.ReceiverAddress
  id: ReceiverAddress
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: ReceiverAddress
  nameWithType: SendTokenTxData.ReceiverAddress
  fullName: VEDriversLite.SendTokenTxData.ReceiverAddress
  type: Property
  source:
    id: ReceiverAddress
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 29
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAddress where token will be send\n"
  example: []
  syntax:
    content: public string ReceiverAddress { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ReceiverAddress As String
  overload: VEDriversLite.SendTokenTxData.ReceiverAddress*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.Symbol
  commentId: P:VEDriversLite.SendTokenTxData.Symbol
  id: Symbol
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: Symbol
  nameWithType: SendTokenTxData.Symbol
  fullName: VEDriversLite.SendTokenTxData.Symbol
  type: Property
  source:
    id: Symbol
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 33
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nSymbol of token\n"
  example: []
  syntax:
    content: public string Symbol { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Symbol As String
  overload: VEDriversLite.SendTokenTxData.Symbol*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.Id
  commentId: P:VEDriversLite.SendTokenTxData.Id
  id: Id
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: Id
  nameWithType: SendTokenTxData.Id
  fullName: VEDriversLite.SendTokenTxData.Id
  type: Property
  source:
    id: Id
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 37
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nId of token\n"
  example: []
  syntax:
    content: public string Id { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Id As String
  overload: VEDriversLite.SendTokenTxData.Id*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.Amount
  commentId: P:VEDriversLite.SendTokenTxData.Amount
  id: Amount
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: Amount
  nameWithType: SendTokenTxData.Amount
  fullName: VEDriversLite.SendTokenTxData.Amount
  type: Property
  source:
    id: Amount
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 41
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nAmount of the tokens\n"
  example: []
  syntax:
    content: public double Amount { get; set; }
    parameters: []
    return:
      type: System.Double
    content.vb: Public Property Amount As Double
  overload: VEDriversLite.SendTokenTxData.Amount*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.Metadata
  commentId: P:VEDriversLite.SendTokenTxData.Metadata
  id: Metadata
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: SendTokenTxData.Metadata
  fullName: VEDriversLite.SendTokenTxData.Metadata
  type: Property
  source:
    id: Metadata
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 45
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nMetadata dictionary, key-value pairs\n"
  example: []
  syntax:
    content: public IDictionary<string, string> Metadata { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
    content.vb: Public Property Metadata As IDictionary(Of String, String)
  overload: VEDriversLite.SendTokenTxData.Metadata*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.sendUtxo
  commentId: P:VEDriversLite.SendTokenTxData.sendUtxo
  id: sendUtxo
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: sendUtxo
  nameWithType: SendTokenTxData.sendUtxo
  fullName: VEDriversLite.SendTokenTxData.sendUtxo
  type: Property
  source:
    id: sendUtxo
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 49
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nInitial Utxo for sending transaction from if you want to specify them\n"
  example: []
  syntax:
    content: public ICollection<string> sendUtxo { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.ICollection{System.String}
    content.vb: Public Property sendUtxo As ICollection(Of String)
  overload: VEDriversLite.SendTokenTxData.sendUtxo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.NeblUtxo
  commentId: P:VEDriversLite.SendTokenTxData.NeblUtxo
  id: NeblUtxo
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: NeblUtxo
  nameWithType: SendTokenTxData.NeblUtxo
  fullName: VEDriversLite.SendTokenTxData.NeblUtxo
  type: Property
  source:
    id: NeblUtxo
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 54
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nIf you wish to add specific neblio utxo as source for the fee\n"
  example: []
  syntax:
    content: public string NeblUtxo { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property NeblUtxo As String
  overload: VEDriversLite.SendTokenTxData.NeblUtxo*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
  commentId: P:VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
  id: SendEvenNeblUtxoNotFound
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: SendEvenNeblUtxoNotFound
  nameWithType: SendTokenTxData.SendEvenNeblUtxoNotFound
  fullName: VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
  type: Property
  source:
    id: SendEvenNeblUtxoNotFound
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 60
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nIf this is set and you will provide NeblUtxo, but it is not found in the list of spendable nebl utxos\nit will find another spendable utxo\nIf this is not set and utxo is not found it will throw exception\n"
  example: []
  syntax:
    content: public bool SendEvenNeblUtxoNotFound { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property SendEvenNeblUtxoNotFound As Boolean
  overload: VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: VEDriversLite.SendTokenTxData.UseRPCPrimarily
  commentId: P:VEDriversLite.SendTokenTxData.UseRPCPrimarily
  id: UseRPCPrimarily
  parent: VEDriversLite.SendTokenTxData
  langs:
  - csharp
  - vb
  name: UseRPCPrimarily
  nameWithType: SendTokenTxData.UseRPCPrimarily
  fullName: VEDriversLite.SendTokenTxData.UseRPCPrimarily
  type: Property
  source:
    id: UseRPCPrimarily
    path: C:\repositories\VirtualEconomyFramework\VirtualEconomyFramework\VEDriversLite\SendTokenTxData.cs
    startLine: 65
  assemblies:
  - VEDriversLite
  namespace: VEDriversLite
  summary: "\nIf you use RPC and NBitcoin you can preffer using RPC with set this to true\n"
  example: []
  syntax:
    content: public bool UseRPCPrimarily { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property UseRPCPrimarily As Boolean
  overload: VEDriversLite.SendTokenTxData.UseRPCPrimarily*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
references:
- uid: VEDriversLite
  commentId: N:VEDriversLite
  name: VEDriversLite
  nameWithType: VEDriversLite
  fullName: VEDriversLite
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: VEDriversLite.SendTokenTxData.#ctor*
  commentId: Overload:VEDriversLite.SendTokenTxData.#ctor
  name: SendTokenTxData
  nameWithType: SendTokenTxData.SendTokenTxData
  fullName: VEDriversLite.SendTokenTxData.SendTokenTxData
- uid: VEDriversLite.SendTokenTxData.SenderAddress*
  commentId: Overload:VEDriversLite.SendTokenTxData.SenderAddress
  name: SenderAddress
  nameWithType: SendTokenTxData.SenderAddress
  fullName: VEDriversLite.SendTokenTxData.SenderAddress
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: VEDriversLite.SendTokenTxData.Password*
  commentId: Overload:VEDriversLite.SendTokenTxData.Password
  name: Password
  nameWithType: SendTokenTxData.Password
  fullName: VEDriversLite.SendTokenTxData.Password
- uid: VEDriversLite.SendTokenTxData.ReceiverAddress*
  commentId: Overload:VEDriversLite.SendTokenTxData.ReceiverAddress
  name: ReceiverAddress
  nameWithType: SendTokenTxData.ReceiverAddress
  fullName: VEDriversLite.SendTokenTxData.ReceiverAddress
- uid: VEDriversLite.SendTokenTxData.Symbol*
  commentId: Overload:VEDriversLite.SendTokenTxData.Symbol
  name: Symbol
  nameWithType: SendTokenTxData.Symbol
  fullName: VEDriversLite.SendTokenTxData.Symbol
- uid: VEDriversLite.SendTokenTxData.Id*
  commentId: Overload:VEDriversLite.SendTokenTxData.Id
  name: Id
  nameWithType: SendTokenTxData.Id
  fullName: VEDriversLite.SendTokenTxData.Id
- uid: VEDriversLite.SendTokenTxData.Amount*
  commentId: Overload:VEDriversLite.SendTokenTxData.Amount
  name: Amount
  nameWithType: SendTokenTxData.Amount
  fullName: VEDriversLite.SendTokenTxData.Amount
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: VEDriversLite.SendTokenTxData.Metadata*
  commentId: Overload:VEDriversLite.SendTokenTxData.Metadata
  name: Metadata
  nameWithType: SendTokenTxData.Metadata
  fullName: VEDriversLite.SendTokenTxData.Metadata
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IDictionary`2
  name: IDictionary<String, String>
  nameWithType: IDictionary<String, String>
  fullName: System.Collections.Generic.IDictionary<System.String, System.String>
  nameWithType.vb: IDictionary(Of String, String)
  fullName.vb: System.Collections.Generic.IDictionary(Of System.String, System.String)
  name.vb: IDictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.IDictionary`2
  commentId: T:System.Collections.Generic.IDictionary`2
  isExternal: true
  name: IDictionary<TKey, TValue>
  nameWithType: IDictionary<TKey, TValue>
  fullName: System.Collections.Generic.IDictionary<TKey, TValue>
  nameWithType.vb: IDictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.IDictionary(Of TKey, TValue)
  name.vb: IDictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: System.Collections.Generic.IDictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: VEDriversLite.SendTokenTxData.sendUtxo*
  commentId: Overload:VEDriversLite.SendTokenTxData.sendUtxo
  name: sendUtxo
  nameWithType: SendTokenTxData.sendUtxo
  fullName: VEDriversLite.SendTokenTxData.sendUtxo
- uid: System.Collections.Generic.ICollection{System.String}
  commentId: T:System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.ICollection`1
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  nameWithType.vb: ICollection(Of String)
  fullName.vb: System.Collections.Generic.ICollection(Of System.String)
  name.vb: ICollection(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.ICollection`1
  commentId: T:System.Collections.Generic.ICollection`1
  isExternal: true
  name: ICollection<T>
  nameWithType: ICollection<T>
  fullName: System.Collections.Generic.ICollection<T>
  nameWithType.vb: ICollection(Of T)
  fullName.vb: System.Collections.Generic.ICollection(Of T)
  name.vb: ICollection(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: System.Collections.Generic.ICollection
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: VEDriversLite.SendTokenTxData.NeblUtxo*
  commentId: Overload:VEDriversLite.SendTokenTxData.NeblUtxo
  name: NeblUtxo
  nameWithType: SendTokenTxData.NeblUtxo
  fullName: VEDriversLite.SendTokenTxData.NeblUtxo
- uid: VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound*
  commentId: Overload:VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
  name: SendEvenNeblUtxoNotFound
  nameWithType: SendTokenTxData.SendEvenNeblUtxoNotFound
  fullName: VEDriversLite.SendTokenTxData.SendEvenNeblUtxoNotFound
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: VEDriversLite.SendTokenTxData.UseRPCPrimarily*
  commentId: Overload:VEDriversLite.SendTokenTxData.UseRPCPrimarily
  name: UseRPCPrimarily
  nameWithType: SendTokenTxData.UseRPCPrimarily
  fullName: VEDriversLite.SendTokenTxData.UseRPCPrimarily
