@using VEDriversLite
@using VEDriversLite.NFT
@using VEDriversLite.NeblioAPI
@inject AppData AppData

<div class="row">
    <div class="col">
        <Spin Tip="Loading..." Spinning="@loading">
            <div class="row">
                <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                    <span>Name: @NFT.Name</span>
                </div>
            </div>
            <div class="row">
                <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                    <span>Author: @NFT.Author</span>
                </div>
            </div>
            <div class="row">
                <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                    <span>Description: @NFT.Description</span>
                </div>
            </div>
            @if (!string.IsNullOrEmpty(NFT.Link))
            {
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <a href="@NFT.Link" target="_blank">Connected Link</a>
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(NFT.NFTOriginTxId))
            {
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <a href="https://explorer.nebl.io/tx/@NFT.NFTOriginTxId" target="_blank">Mint Tx In Explorer</a>
                    </div>
                </div>
            }
            @if (!string.IsNullOrEmpty(NFT.Utxo))
            {
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <a href="https://explorer.nebl.io/tx/@NFT.Utxo" target="_blank">Tx In Explorer</a>
                    </div>
                </div>
            }
            <div class="row">
                <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                    <span>Confirmations: @NFT.TxDetails.Confirmations.ToString()</span>
                </div>
            </div>
            <div class="row" style="margin-top:20px;">
                <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                    <a href="@NFT.ImageLink" target="_blank">
                        @if (!string.IsNullOrEmpty(NFT.ImageLink))
                        {
                            <img src="@NFT.ImageLink" style="min-height:50px; max-height:150px; width:auto;" />
                        }
                        else
                        {
                            <Spin Tip="Loading..." Spinning="true">
                                <img src="@NFT.ImageLink" style="min-height:100px; max-height:150px; width:auto; min-width:50px; max-width:250px;" />
                            </Spin>
                        }
                    </a>
                </div>
            </div>
            <div class="row" style="margin-top:20px;">
                @if (!AppData.Account.ReceivedPayments.ContainsKey(NFT.Utxo))
                {
                    @if (OwnNFT)
                    {
                        @if (NFT.PriceActive)
                        {
                            <div class="col w-100 d-flex justify-content-center align-items-center">
                                <small class="text-muted">Setted Price: @NFT.Price NEBL</small>
                            </div>
                        }
                    }
                }
                else
                {
                    <div class="col w-100 d-flex justify-content-center align-items-center">
                        <small class="text-muted">Sold. Waiting for processing.</small>
                    </div>
                }
            </div>
            @if (OwnNFT)
            {
                @if (NFT.TxDetails.Confirmations > 1)
                {
                    <div class="row d-flex justify-content-center align-items-center" style="margin-top:20px;">
                        <div class="col d-flex justify-content-center align-items-center w-auto">
                            @if (NFT.Type == NFTTypes.Post)
                            {
                            <button class="btn btn-secondary" @onclick="async () => ShowUpdatePostNFTDialog()" style="width:65px; height:65px; margin-right:20px;">
                                <div class="row">
                                    <div class="col">
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <i class="oi oi-pencil"></i>
                                            </div>
                                        </div>
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <span style="font-size: 12px;">Edit</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </button>
                            }
                            <button class="btn btn-primary" @onclick="async () => ShowSendNFTDialog()" style="width:65px; height:65px;">
                                <div class="row">
                                    <div class="col">
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <i class="oi oi-location"></i>
                                            </div>
                                        </div>
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <span style="font-size: 12px;">Send</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </button>
                            <button class="btn btn-primary" @onclick="async () => ShowSetPriceNFTDialog()" style="width:65px; height:65px; margin-left:20px;">
                                <div class="row">
                                    <div class="col">
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <i class="oi oi-dollar"></i>
                                            </div>
                                        </div>
                                        <div class="row d-flex justify-content-center align-items-center">
                                            <div class="col">
                                                <span style="font-size: 12px;">Sell</span>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </button>
                        </div>
                    </div>
                }
            }

            <VENFTApp_Blazor.Components.NFTHistory Utxo="@NFT.Utxo" />
        </Spin>
    </div>
</div>

<SendNFT NFT="@NFT" NFTSent="@NFTSentHandler" @bind-SendNFTDialogVisible="sendNFTDialogVisible"/>
<SetNFTPrice NFT="@NFT" NFTSent="@NFTSentHandler" @bind-SetPriceNFTDialogVisible="setPriceNFTDialogVisible"/>

<Modal Title="Create or edit post NFT"
       Visible="@createNewPostVisible"
       OnOk="@createNewPostConfirm"
       OnCancel="@createNewPostCancel">
        <MintNFTForm NFTType="NFTTypes.Post" NFT="@NFT" RedirectToNFTsAfterMint="false" NFTMinted="@NFTMinted" />
</Modal>

@code {

    private INFT NFT { get; set; } = new ImageNFT("");

    private string _utxo = string.Empty;
    [Parameter]
    public string Utxo
    {
        get => _utxo;
        set
        {
            if (!string.IsNullOrEmpty(value))
            {
                if (_utxo != value)
                {
                    _utxo = value;
                    Load();
                }
            }
        }
    }

    [Parameter]
    public bool OwnNFT { get; set; } = false;

    [Parameter]
    public EventCallback<string> NFTSent { get; set; }

    bool createNewPostVisible = false;
    bool sendNFTDialogVisible = false;
    bool setPriceNFTDialogVisible = false;
    bool loading = false;

    string status = string.Empty;

    protected override Task OnInitializedAsync()
    {
        if (!string.IsNullOrEmpty(_utxo))
            Load();
        return base.OnInitializedAsync();
    }

    private async Task Load()
    {
        loading = true;
        StateHasChanged();
        NFT.TxDataRefreshed -= TxDataRefreshedHandler;
        await NFT.StopRefreshingData();
        NFT = await NFTFactory.GetNFT(NFTHelpers.TokenId, _utxo);

        if (NFT == null)
            return;

        await NFT.StartRefreshingTxData();
        NFT.TxDataRefreshed += TxDataRefreshedHandler;
        loading = false;
        StateHasChanged();
    }

    private void TxDataRefreshedHandler(object sender, GetTransactionInfoResponse info)
    {
        StateHasChanged();
    }

    private async Task ShowSendNFTDialog()
    {
        sendNFTDialogVisible = true;
        StateHasChanged();
    }

    private async Task ShowSetPriceNFTDialog()
    {
        setPriceNFTDialogVisible = true;
        StateHasChanged();
    }

    private async Task ShowUpdatePostNFTDialog()
    {
        createNewPostVisible = true;
        StateHasChanged();
    }

    private async Task createNewPostConfirm(MouseEventArgs e)
    {
        createNewPostVisible = false;
        StateHasChanged();
    }

    private async Task createNewPostCancel(MouseEventArgs e)
    {
        createNewPostVisible = false;
    }

    void NFTSentHandler(string e)
    {
        sendNFTDialogVisible = false;
        StateHasChanged();
    }

    void NFTMinted(string e)
    {
        createNewPostVisible = false;
        StateHasChanged();
    }
}
