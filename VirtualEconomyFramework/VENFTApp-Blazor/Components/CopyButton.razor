@inject IJSRuntime JSRuntime
<div class="row">
    <div class="col d-flex justify-content-center align-items-center">
        @if (!copyTextButtonCoppied)
        {
            <button class="btn btn-light" @onclick="copyCodeToClipboard">Copy <i class="oi oi-share"></i></button>
        }
        else
        {
            <button class="btn btn-light" @onclick="copyCodeToClipboard">Copied <i class="oi oi-check"></i></button>
        }
    </div>
</div>

@code {

    private string textToCopy = string.Empty;
    [Parameter]
    public string TextToCopy
    {
        get => textToCopy;
        set => textToCopy = value;
    }

    bool copyTextButtonCoppied = false;

    private async Task copyCodeToClipboard(MouseEventArgs e)
    {
        if (string.IsNullOrEmpty(textToCopy))
            return;

        await JSRuntime.InvokeVoidAsync("jsFunctions.copyToClipboard", textToCopy);
        await copyCodeToClipboardButtonTextEfect();
    }

    private async Task copyCodeToClipboardButtonTextEfect()
    {
        copyTextButtonCoppied = true;
        StateHasChanged();
        await Task.Delay(1000);
        copyTextButtonCoppied = false;
        StateHasChanged();
    }
}
