@using VEDriversLite

<div class="card" style="margin:10px; max-width:160px;min-width:160px;width:160px;">

    @if (!string.IsNullOrEmpty(ImageLink))
    {
        <img class="card-img-top" src="@ImageLink" @onclick="SelectTab" style="min-height:50px; max-height:70px; height:inherit; max-width:150px; min-width:50px; width:auto;" />
    }
    else
    {
        <Spin Tip="Loading..." Spinning="@tryToLoad">
            <img class="card-img-top" src="@ImageLink" @onclick="SelectTab" style="min-height:50px; max-height:70px; height:inherit; max-width:150px; min-width:50px; width:auto;" />
        </Spin>
    }
    <div class="card-body d-flex justify-content-center align-items-end @bgcolor" style="width:150px;height:150px;">
        <div class="row">
            <div class="col">
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        Address
                    </div>
                </div>
                <div class="row" style="margin-top:2px;">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        <small>@NeblioTransactionHelpers.ShortenAddress(Address);</small>
                    </div>
                </div>
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        Nick
                    </div>
                </div>
                <div class="row" style="margin-top:2px;">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        @Nick
                    </div>
                </div>
                <div class="row" style="margin-top:5px;">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        Bio
                    </div>
                </div>
                <div class="row" style="margin-top:2px;">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        <small>@Bio</small>
                    </div>
                </div>
                <div class="row" style="margin-top:5px;">
                    <div class="col d-flex d-xl-flex justify-content-center align-items-center">
                        <button class="btn btn-secondary" @onclick="CloseTab">Close Tab</button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    [Parameter]
    public string Address { get; set; } = string.Empty;
    [Parameter]
    public string ImageLink { get; set; } = string.Empty;
    [Parameter]
    public string Nick { get; set; } = string.Empty;
    [Parameter]
    public string Bio { get; set; } = string.Empty;

    string bgcolor = "bg-light";
    [Parameter]
    public bool Selected
    {
        set
        {
            if (value)
                bgcolor = "bg-light";
            else
                bgcolor = "";
        }
    }
    [Parameter]
    public EventCallback<string> TabSelected { get; set; }
    [Parameter]
    public EventCallback<string> TabClosed { get; set; }

    private bool tryToLoad = true;

    private System.Threading.Timer timer;

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            timer = new System.Threading.Timer(async (object stateInfo) =>
            {
                if (string.IsNullOrEmpty(ImageLink))
                    tryToLoad = false;
                StateHasChanged();
                timer.Dispose();
            }, new System.Threading.AutoResetEvent(false), 10000, 10000);
        }

        base.OnAfterRender(firstRender);
    }

    private async Task SelectTab(MouseEventArgs e)
    {
        TabSelected.InvokeAsync(Address);
    }
    private async Task CloseTab(MouseEventArgs e)
    {
        TabClosed.InvokeAsync(Address);
    }
}
