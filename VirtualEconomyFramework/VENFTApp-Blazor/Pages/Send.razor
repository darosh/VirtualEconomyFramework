@using VEDriversLite
@using VEDriversLite.NFT
@using VEDriversLite.NeblioAPI
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject AppData AppData
@inject HttpClient _client
@inject NavigationManager NavManager
@page "/send"

<div class="container-fluid">
    @if (errorDuringSend)
    {
        <Alert Type="@AlertType.Error"
               Message="Error"
               Description=@errorMessage
               ShowIcon="true" />
    }

    @if (AppData.Account.IsLocked())
    {
        <Alert Type="@AlertType.Error"
               Message="Error"
               Description="Account Is Locked. Please unlock account first."
               ShowIcon="true" />
    }

    <Spin spinning="@sendingTransaction" tip="Sending Transaction...">
        <div class="row">
            <div class="col">
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <h1>Send VENFT Tokens</h1>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <VENFTApp_Blazor.Components.AccountBalances />
                    </div>
                </div>
                
                <div class="row">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Available source tokens on address: @AppData.Account.SourceTokensBalance</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>From:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>@AppData.Account.Address</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>To:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <Input Placeholder="Add receiver address" @bind-Value=@tokenReceiver Style="font-size:12px; min-width:250px; max-width:350px;" />
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Amount of tokens:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <input type="number" step="1" min="2" max="@AppData.Account.SourceTokensBalance" @bind="@AmountTokensToSend" />
                        <!--<Input ShowUpDown="false" TValue="int" @bind-Value=@AmountTokensToSend Style="font-size:12px; min-width:250px;" />-->
                    </div>
                </div>
                <div class="row" style="margin-top:20px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <button class="btn btn-primary" @onclick="SendTokenTx">Send</button>
                    </div>
                </div>
                <div class="row" style="margin-top:20px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Sent transaction: <a href="https://explorer.nebl.io/tx/@tokentxid" target="_blank">@tokentxid</a></p>
                    </div>
                </div>

                <div class="row" style="margin-top:40px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <h1>Send Neblio</h1>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Actual Balance: @AppData.Account.TotalBalance NEBL</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Unconfirmed Balance: @AppData.Account.TotalUnconfirmedBalance NEBL</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>From:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>@AppData.Account.Address</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>To:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <Input Placeholder="Add receiver address" @bind-Value=@neblReceiver Style="font-size:12px; min-width:250px;max-width:350px;" />
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Amount of Nebl:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <input type="number" step="0.0001" min="0.0001" max="@AppData.Account.TotalBalance" @bind="@AmountToSend" />
                        <!--<Input ShowUpDown="false" TValue="double" Format="0.000" @bind-Value=@AmountToSend Style="font-size:12px; min-width:250px;" />-->
                    </div>
                </div>
                <div class="row" style="margin-top:20px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <button class="btn btn-primary" @onclick="SendTx">Send</button>
                    </div>
                </div>
                <div class="row" style="margin-top:20px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>Sent transaction: <a href="https://explorer.nebl.io/tx/@txid" target="_blank">@txid</a></p>
                    </div>
                </div>
            </div>
        </div>

    </Spin>

</div>


@code {
    bool errorDuringSend = false;
    string errorMessage = string.Empty;
    bool sendingTransaction = false;
    private string txid = string.Empty;
    private string tokentxid = string.Empty;
    private string tokenReceiver = string.Empty;
    private string neblReceiver = string.Empty;
    private int AmountTokensToSend = 2;
    private double AmountToSend = 0.001;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(AppData.Account.Address))
            {
                AppData.Account = new NeblioAccount();
                await Task.Delay(500);
                NavManager.NavigateTo("/");
            }

            if (AppData.Account != null)
                AppData.Account.Refreshed += RefreshedHandler;
        }
        catch(Exception ex)
        {
            AppData.Account = new NeblioAccount();
            await Task.Delay(500);
            NavManager.NavigateTo("/");
        }

        if (AppData.Account != null)
            AppData.Account.Refreshed += RefreshedHandler;
    }


    void RefreshedHandler(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    private async Task SendTokenTx()
    {
        try {
            errorDuringSend = false;
            sendingTransaction = true;
            tokentxid = "Sending...";
            StateHasChanged();

            var metadata = new Dictionary<string, string>();
            metadata.Add("Data", "Sent with https://ve-nft.com/");

            var res = await AppData.Account.SendNeblioTokenPayment(NeblioTransactionHelpers.VENFTId, metadata, tokenReceiver, AmountTokensToSend);
            sendingTransaction = false;

            if (res.Item1)
            {
                tokentxid = res.Item2;
            }
            else
            {
                tokentxid = res.Item2;
                errorDuringSend = true;
                errorMessage = res.Item2;
            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            tokentxid = ex.Message;
            sendingTransaction = false;
            errorDuringSend = true;
            errorMessage = ex.Message;
            Console.WriteLine(ex.Message);
            StateHasChanged();
        }
    }

    private async Task SendTx()
    {
        try {
            errorDuringSend = false;
            sendingTransaction = true;
            txid = "Sending...";
            StateHasChanged();

            var res = await AppData.Account.SendNeblioPayment(neblReceiver, AmountToSend);
            sendingTransaction = false;

            if (res.Item1)
            {
                txid = res.Item2;
            }
            else
            {
                txid = res.Item2;
                errorDuringSend = true;
                errorMessage = res.Item2;
            }
            StateHasChanged();
        }
        catch (Exception ex)
        {
            txid = ex.Message;
            sendingTransaction = false;
            errorDuringSend = true;
            errorMessage = ex.Message;
            Console.WriteLine(ex.Message);
            StateHasChanged();
        }
    }
}
