@using VEDriversLite
@using VEDriversLite.NFT
@using VEDriversLite.NeblioAPI
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject Blazored.SessionStorage.ISessionStorageService sessionStorage
@inject AppData AppData
@inject HttpClient _client
@inject NavigationManager NavManager
@page "/send"

<div class="container-fluid">

    <Spin spinning="@sendingTransaction" tip="Sending Transaction...">
        <div class="row">
            <div class="col">
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <h3>Send Payment</h3>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <VENFTApp_Blazor.Components.AccountBalances />
                    </div>
                </div>
                <div class="row" style="margin-top:20px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <RadioGroup @bind-Value="@txType" @onselectionchange="txTypeChangedHandler">
                            <Radio Value="TxType.Neblio">Neblio</Radio>
                            <Radio Value="TxType.Tokens">Tokens</Radio>
                        </RadioGroup>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <p>To Address:</p>
                    </div>
                </div>
                <div class="row" style="margin-top:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <Input Placeholder="Add receiver address" @bind-Value=@Receiver Style="font-size:12px; min-width:250px;max-width:350px;" />
                        <!--<VENFTApp_Blazor.Components.LoadQRData MarginLeft="10" ReadedTextChanged="QRTextReaded" />-->
                    </div>
                </div>

                @if (txType == TxType.Neblio)
                {
                    <div class="row" style="margin-top:30px;">
                        <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                            <p>Amount of Nebl:</p>
                        </div>
                    </div>
                    <div class="row" style="margin-top:10px;">
                        <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                            <input type="number" step="0.0001" min="0.0001" max="@AppData.Account.TotalBalance" @bind="@AmountToSend" />
                        </div>
                    </div>
                }
                else
                {
                    <div class="row" style="margin-top:30px;">
                        <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                            <p>Amount of tokens:</p>
                        </div>
                    </div>
                    <div class="row" style="margin-top:30px;">
                        <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                            <small>Available source tokens on address: @AppData.Account.SourceTokensBalance VENFT</small>
                        </div>
                    </div>
                    <div class="row" style="margin-top:2px;">
                        <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                            <input type="number" step="1" min="2" max="@AppData.Account.SourceTokensBalance" @bind="@AmountTokensToSend" />
                        </div>
                    </div>
                }

                <div class="row" style="margin-top:20px; margin-bottom:10px;">
                    <div class="col d-flex d-xl-flex justify-content-center justify-content-xl-center align-items-xl-center">
                        <button class="btn btn-primary" @onclick="SendTransaction">Send</button>
                    </div>
                </div>
            </div>
            <div class="col w-25">
                <VENFTApp_Blazor.Components.TransactionsList @bind-MaxLoadedTx="maxLoadedTransaction" />
            </div>
        </div>

    </Spin>
    <VENFTApp_Blazor.Components.InfoEventModal />
</div>


@code {
    private enum TxType
    {
        Neblio,
        Tokens
    }

    TxType txType = TxType.Neblio;

    bool sendingTransaction = false;
    private string txid = string.Empty;

    private int AmountTokensToSend = 2;
    private double AmountToSend = 0.001;
    private int maxLoadedTransaction = 10;
    private string receiver = string.Empty;
    public string Receiver
    {
        get => receiver;
        set
        {
            if (!string.IsNullOrEmpty(value))
            {
                receiver = value;
                StateHasChanged();
            }
        }
    }

    protected override Task OnInitializedAsync()
    {
        try
        {
            if (string.IsNullOrEmpty(AppData.Account.Address))
            {
                Redirect();
            }
            else
            {
                if (AppData.Account != null)
                    AppData.Account.Refreshed += RefreshedHandler;
            }
        }
        catch(Exception ex)
        {
            Redirect();
        }

        return base.OnInitializedAsync();
    }

    private async Task Redirect()
    {
        AppData.Account = new NeblioAccount();
        await Task.Delay(500);
        NavManager.NavigateTo("/");
    }

    private async Task QRTextReaded(string text)
    {
        Receiver = text;
    }

    void RefreshedHandler(object sender, EventArgs e)
    {
        StateHasChanged();
    }

    private void txTypeChangedHandler(EventArgs e)
    {
        StateHasChanged();
    }

    private async Task SendTransaction()
    {
        switch (txType)
        {
            case TxType.Neblio:
                await SendTx();
                break;
            case TxType.Tokens:
                await SendTokenTx();
                break;
        }
    }

    private async Task SendTokenTx()
    {
        try {
            sendingTransaction = true;
            StateHasChanged();

            var metadata = new Dictionary<string, string>();
            metadata.Add("Data", "Sent with https://ve-nft.com/");

            var res = await AppData.Account.SendNeblioTokenPayment(NeblioTransactionHelpers.VENFTId, metadata, Receiver, AmountTokensToSend);
            Console.WriteLine("Tx send result: " + res);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            sendingTransaction = false;
            StateHasChanged();
        }
    }

    private async Task SendTx()
    {
        try
        {
            sendingTransaction = true;
            StateHasChanged();

            var res = await AppData.Account.SendNeblioPayment(Receiver, AmountToSend);
            Console.WriteLine("Tx send result: " + res);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        finally
        {
            sendingTransaction = false;
            StateHasChanged();
        }
    }
}
