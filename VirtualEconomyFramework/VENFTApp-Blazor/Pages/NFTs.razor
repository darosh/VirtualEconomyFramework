@using VEDriversLite
@inject Blazored.LocalStorage.ILocalStorageService localStorage
@inject HttpClient _client
@page "/nfts"

<h1>Token Transaction</h1>

<p>Sent transaction: @txid</p>
<button class="btn btn-primary" @onclick="SendTx">Send Tx</button>

@code {
    private string txid = "";
    private NeblioAccount account = new NeblioAccount();
    private string receiver = "NPWBL3i8ZQ8tmhDtrixXwYd93nofmunvhA";


    protected override async Task OnInitializedAsync()
    {
        var address = string.Empty;
        var key = string.Empty;

        address = await localStorage.GetItemAsync<string>("address");
        if (string.IsNullOrEmpty(address))
        {
            await account.CreateNewAccount("mypass", false);
            address = account.Address;
            key = account.AccountKey.GetEncryptedKey(returnEncrypted: true);
            await localStorage.SetItemAsync("address", address);
            await localStorage.SetItemAsync("key", key);
        }
        else
        {
            key = await localStorage.GetItemAsync<string>("key");
        }

        await account.LoadAccount("mypass", key, address); // put here your password
    }

    private async Task SendTx()
    {
        txid = "Sending...";

        // create token metadata
        var metadata = new Dictionary<string, string>();
        metadata.Add("Data", "My first metadata in token with VEDriversLite and Blazor");

        // fill input data for sending tx
        var dto = new SendTokenTxData() // please check SendTokenTxData for another properties such as specify source UTXOs
        {
            Amount = 1,
            Id = "La58e9EeXUMx41uyfqk6kgVWAQq9yBs44nuQW8", // id of token
            Symbol = "VENFT", // symbol of token
            Metadata = metadata,
            Password = "mypass", // put here your password
            SenderAddress = account.Address,
            ReceiverAddress = receiver
        };

        try
        {
            // send tx
            var rtxid = await NeblioTransactionHelpers.SendNTP1TokenAPIAsync(dto, account);
            if (rtxid != null)
                txid = rtxid;
        }
        catch (Exception ex)
        {
            txid = ex.Message;
        }
    }
}
